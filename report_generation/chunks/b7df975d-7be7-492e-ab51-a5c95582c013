{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "/home/guanzhideng145/research/ip_portal/patent_kg/patents/1235_US20240143524A1.pdf"}, "page_content": "-continued\n\nNIST Security Level 2 3 5 Parameters n \u00a9 key range] 2 4 2 BO-n] 78 196 120 @ [max\u00ae of 1\u2019s in h] 80 55 75\n\n\u00ae indicates text missing or illegible when filed\n\n[0069] In Algorithm 3, public key pk and signature o are unpacked for Verify (i.e. Step 1-2). The message M and. public key are hashed with the SHAKE256 (i.e. Step 3). The NIT is used to calculate Az-ct (i.e. Step 5-10). The hint h is used to correct calculation errors in data compression (i.e. Step 10). There are three conditions to check whether the obtained signature can meet the security requirements (i.e. Step 12). If the security requirements are not satisfied simultaneously, the signature will be rejected.\n\nAlgorithm 3 Dilithium\u2019s Verify[2] Input: Public key sk, Message M, signature 0 Output: The validity of the signature Unpack pk \u9a70\u540d \u672c 9: w2=6 10: w :=UseHint,(h, wi - Wo, 27) we {0, 1\u00b0 to Hizs(p) : Unpack o = (z, h 8} (pty) = Hys6(Has6(p lity )IIM) // Polynomial Matrix-vector Multiplication (Point-wise Multiplication + Point-wise Addition) =SamplelnBall(@) TT(c),\u00ae =NTT(t, - 24) 8 Polynomial Vector Multiplication (Point-wise Multiplication) // Point-wise Subtraction 11: cp = Hyso(ullw) 12: Retumflizilas < ~ \u524d and [6 = c2] and [# of 1's inh is so]\n\n@ indicates text missing or illegible when filed\n\n[0070] The following table describes the operations in above algorithms and the corresponding functions used NIST Dilithium reference C code. Note that Dilithium three different security levels, which provides a trade-off security and performance.\n\nthe has\n\nin\n\nthe in\n\nOperation Function Description Hye keccak_permute | SHAKE128 XOF. Hzsc keccak_pemute SHAKF258 XOF. Sn rej_eta Rejection sampling with coefficient in [-n, n]. Re rej_uniform Rejection sampling with coefficient in [-q, q]. Sy polyz_unpack Bit-pack to get member in[-y,, \u00a5,). NIT ntt, monty_reduce Transform polynomial to NTT domain. INIT intt, monty_reduce Inverse NTT transform.\n\nUS 2024/0143524 Al\n\nMay 2, 2024\n\n-continued", "type": "Document"}}