{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "/home/guanzhideng145/research/ip_portal/patent_kg/patents/1235_US20240143524A1.pdf"}, "page_content": "[0098] The PWA algorithm is shown in Algorithm 7. The PWA algorithm could perform different computations: when 1-2 and configured as addition/subtraction, point-wise addi- tion/subtraction of two polynomials is computed; When | is greater than 2, point-wise addition of polynomial vector of length 1 is conducted. From the above analysis, the vector- ized addition method can reduce the data transmission from 3(1-1)xn coefficients to (1+1)xn coefficients.\n\nAlgorithm 7 Vectorized Point-wise Addition Input: Polynomial a with coefficient array am Input: Polynomial vector b with coefficient array bf! - 1][n] Output: Polynomial r with coefficient array r[n] 1: for i=O;i< 1-1; i++ 2 for} =O: j <n; jee \u00a5 Vectorized read counter design in hardware. The | is configurable using Software. #/ Single polynomial read counter design in hardware. \u2018The n is fixed to 256 in hardware. 3: ifi-=0 4: r[j] = alj] bl mod q Parallel addition unit design in hardware (two modular adders). 3: else 6: r[j] = ri+bm0l mod q JW Two modular adders (reuse the two adders in Step 4). 7 end if 8: end for 9; end for 10: Retum r\n\nThere are two methods to compute the polynomial addition (ie. step ID in FIG. 3. In method a, two polynomials coo and Co, are transmitted from the software to the hardware for computation first. Then, the temporary result c,, is transmit-\n\n[0099] Based on Algorithm 7, the hardware architecture of PWA referring to FIG. 5A may be obtained, and the PWA module 102C is arranged to operate according to a PWA finite state transition with following states:\n\nUS 2024/0143524 Al\n\n[0100] receiving at least two polynomials from an input FIFO of the hardware processor to RAM in two adders in the PWA module in a read state;\n\n[0101]\n\nthen writing\n\ncompleting point-wise addition, computation results to the output FIFO of the hardware processor in an addition-writing-state; and", "type": "Document"}}