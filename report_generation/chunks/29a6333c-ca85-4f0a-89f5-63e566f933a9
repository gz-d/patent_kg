{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "/home/guanzhideng145/research/ip_portal/patent_kg/patents/1235_US20240143524A1.pdf"}, "page_content": "[0101]\n\nthen writing\n\ncompleting point-wise addition, computation results to the output FIFO of the hardware processor in an addition-writing-state; and\n\n[0102] after carrying out reading, computing, and writ- ing computation data in a pipelined manner, returning the point-wise addition module in an idle state.\n\nAlternatively, the point-wise addition module may perform subtraction by adding a negative representation of one of the two polynomials to another one, when the control register sets the PWA module to operate in the subtraction mode.\n\n[0103] In addition, the PWA finite state transition further includes an addition state in which more than two sets of polynomials are added by performing point-wise addition before the point-wise addition module entering the addition- writing-state.\n\n[0104] With reference also to FIG. 5B, the polynomial is read from the input FIFO into the RAM_1 in read_state. If 12, it will directly enter the add_write_state after the read_state, complete point-wise addition/subtraction, and write data into the output FIFO. Subtraction is achieved by taking the negative of the input FIFO data and then by addition. If] is greater than 2, it will first enter the add_state after the read_state, perform point-wise additions, and then enter the add_write_state to complete the last set of point- wise addition and finally write data to the output FIFO. Two adders receive data from the RAM and the input FIFO when performing point-wise addition, and then another two adders are used to compute modular reduction over q. The RAM_1 and RAM_2 take turns to send and receive data in add_state, controlled by the 1-bit flip signal in FIG. 5.\n\nthe\n\nof hardware accelerator", "type": "Document"}}