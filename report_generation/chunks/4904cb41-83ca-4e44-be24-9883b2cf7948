{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "/home/guanzhideng145/research/ip_portal/patent_kg/patents/1235_US20240143524A1.pdf"}, "page_content": "are\n\n[0115]\n\nThe SHAKE module 102D generates the outputs of\n\nthe SHAKE256 and the sampled results of the SHAKE128. This module consumes the highest portion of hardware resources in this design because a relatively high-speed. Keccak core would not become the performance bottleneck of the whole system. The first tested SHAKE256 function works as a PRNG, which requires 32-byte inputs and obtains 96-byte outputs. The second tested SHAKE256 function works as a collision resistant hash (CRH) function, which requires 1952-bytes inputs and obtains 48 bytes outputs. For the other three SHAKE128 related functions, the inputs are , 34 bytes, and the outputs are polynomials with length 256. All three functions complete the sampling process in the interval between two rounds of Keccak output (each round consumes 48 cycles for permutation). In rej_uniform sam- pling, at least five rounds of Keccak permutations are required since two samplers receive 48 bits each cycle, and the sampling acceptance rate is 99%. In rej_eta sampling, two samplers require 8 bits each cycle. For each round 1344-bit output, it consumes 168 cycles for sampling, which is more than 48 cycles. Therefore, the hold signal is pulled high to extend two round interval cycles from 48 to 168 in\n\norder to wait for the end of the sampling process.\n\n[0116]\n\n. To evaluate the performance of the hybrid soft-", "type": "Document"}}