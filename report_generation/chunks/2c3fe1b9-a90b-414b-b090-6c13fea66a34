{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "/home/guanzhideng145/research/ip_portal/patent_kg/patents/1235_US20240143524A1.pdf"}, "page_content": "[0095] Referring to FIG. 4A, the length counter is a 4-bit counter to count the length of a polynomial vector. The address generator uses the information of length counter to generate the read/write address of the RAM_1. Note that the coeflicients of polynomial a are stored in the RAM_1 while the coefficients of b are read directly from the input FIFO. The control state of PWM module is shown in FIG. 4B. Firstly, the polynomial a is read from the input FIFO to the RAM_1 in read state. Two multipliers receive data from the Input FIFO and the RAM_1, complete the point-wise mul- tiplication and modular reduction operations, then write the results to the output FIFO in the mul_write_state. Reading, computing, and writing the data are carried out in a pipelined manner. The hardware architecture of modular reduction is designed following the Algorithm 5.\n\n[0096] In addition, referring to FIGS. 5A and 5B, plurality of hardware accelerator modules further includes point-wise addition (PWA) module 102C arranged to accel- erate point-wise addition or subtraction of two polynomials\n\nthe\n\na\n\n[0097] In order to reduce the transmission workload, method b may be adopted, in which the temporary results are kept in hardware for further reuse. Only the polynomials in the same row and the final results are transmitted. Both methods need to transmit Ixn input coefficients and n output coefficients. However, method a needs to additionally trans- mit (I-2)xn intermediate input coeflicients and (I-2)xn intermediate output coeflicients. Therefore, the vectorized PWA is designed according to method b to reduce the number of data transfer.", "type": "Document"}}