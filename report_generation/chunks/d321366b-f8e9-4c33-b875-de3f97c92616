{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "/home/guanzhideng145/research/ip_portal/patent_kg/patents/1235_US20240143524A1.pdf"}, "page_content": "reduced by half comparing with the traditional method.\n\n-continued\n\nAlgorithm 5 Modular Reduction in Z,?3 91541 13: ifr <0 then 14: x[22 : 0] =rl23: 0] + dl22 : 0] 15: end if 16: Retumr\n\n[0078] Preferably, the plurality of hardware accelerator modules includes an NTT transformation module, more preferably a hybrid NTT/Inverse-NTT (INTT) transforma- tion module configurable to operate in a selected one of an NTT mode or an INTT mode, arranged to accelerate mul- tiplication of two polynomials.\n\n[0079] With reference to FIGS. 2A and 2B, the NTT transformation module 102A is arranged to operate accord- ing to an NTT finite state transition with following states: [0080] receiving two polynomials from an input FIFO of the hardware processor to a first RAM unit in the NTT transformation module in a read state;\n\nUS 2024/0143524 Al\n\n[0081] feeding the two polynomials stored in the first RAM unit into a butterfly unit, and storing computation results obtained by the butterfly unit in a second RAM unit in the NTT transformation module in a calculation state;\n\n[0082] writing the computation results to the output FIFO of the hardware processor in a write state; and\n\n[0083] returning the NTT transformation module in an idle state.\n\n[0084] The hybrid NTT/INTT hardware module 102A is designed as shown in FIG. 2A, and a finite state machine may be designed to manage the working schedule of the entire NTT/INTT computation, in which the state transition is shown in FIG. 2B. Preferably, there are four states, so the 2-bit signal is used to represent each state. The default state is the idle state. When the hybrid NTT/INTT module is initiated, the ntt_start signal drives the idle state into the read. state. The data is read from the input FIFO in the read state, the NTT/INTT calculations happen in the calculation state, while the result is written into the output FIFO in the write state. The done signal is asserted when a state is complete and hence, the next state immediately starts.", "type": "Document"}}