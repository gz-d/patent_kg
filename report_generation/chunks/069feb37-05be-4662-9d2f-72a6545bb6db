{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "/home/guanzhideng145/research/ip_portal/patent_kg/patents/1235_US20240143524A1.pdf"}, "page_content": "[0123] Referring to FIGS. 7A and 7B, for the same secu- rity level, the Key generation and Verify algorithms take similar computing time while the Sign algorithm consumes 3-5 more time. This is because during Sign process, the signature rejection would introduce re-computation of Sign, thus increasing the computing time. For different security\n\nUS 2024/0143524 Al\n\nthe\n\nlevels, the computing time increases with the expansion corresponding parameters.\n\n[0124] Considering the speedup in FIG. 8, Key generation algorithm has the highest acceleration, while the Sign algo- rithm has the lowest index. This is because the Sign algo- rithm needs to unpack the generated key and pack the generated signature. These operations have no parallel prop- erty thus their computation would be serial in the hardware. in order to alleviate the usage of hardware resources for other operations, the pack and unpack operations are calcu- ated in the software. In summary, when the cache is turned on, the hardware-software co-design system could acceler- ate the Dilithium algorithms by 6-13 times, and when the cache is turned off, it could accelerate the algorithms by 1-34 times.\n\n[0125] In accordance with an embodiment of the present invention, a software/hardware co-design of CRYSTAL- Dilithium of NIST round-3 parameter sets is provided. The table below makes a detailed comparison of Dilithium and other digital signature schemes on different embedded plat- \u2018orms.", "type": "Document"}}