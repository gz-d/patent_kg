{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "/home/guanzhideng145/research/ip_portal/patent_kg/patents/1235_US20240143524A1.pdf"}, "page_content": "one\n\n[0013] In accordance with the first aspect, the NTT trans- formation module is arranged to operate according to an NTT finite state transition with following states: receiving two polynomials from an input FIFO of the hardware processor to a first RAM unit in the NTT transformation module in a read state; feeding the two polynomials stored. in the first RAM unit into a butterfly unit, and storing computation results obtained by the butterfly unit in a second RAM unit in the NTT transformation module in a calculation state; writing the computation results to the output FIFO of the hardware processor in a write state; and the NTT transformation module in idle state.\n\nreturning\n\nan\n\n[0014] In accordance with the first aspect, the NTT trans- formation module is arranged to resize the input data, output data and/or the computation results with different lengths.\n\nthe\n\nbit\n\n[0015] In accordance with the first aspect, the arithmetic operations perform by the hardware processor include poly- nomial matrix-vector multiplication.\n\n[0016] In accordance with the first aspect, the plurality of hardware accelerator modules includes a point-wise multi- plication (PWM) module arranged to accelerate point-wise multiplication of two polynomials.\n\n[0017] In accordance with the first aspect, the point-wise multiplication module is arranged to operate according to a PWM finite state transition with following states: receiving two polynomials from an input FIFO of the hardware processor to RAM in two multipliers in the PWM module in a read state; completing the point-wise multiplication and modular reduction operations, then writing computation results to the output FIFO of the hardware processor in a multiplication-writing-state; and after carrying out reading, computing, and writing computation data in a pipelined manner, returning the point-wise multiplication module in an idle state.", "type": "Document"}}