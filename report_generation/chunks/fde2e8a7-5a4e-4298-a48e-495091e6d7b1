{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "/home/guanzhideng145/research/ip_portal/patent_kg/patents/1235_US20240143524A1.pdf"}, "page_content": "ate\n\n[0091] receiving two polynomials from an input FIFO of the hardware processor to RAM in two multipliers in the PWM module in a read state;\n\n[0092] completing the point-wise multiplication modular reduction operations, then writing computa- tion results to the output FIFO of the hardware proces- sor in a multiplication-writing-state; and\n\nand\n\n[0093] after carrying out reading, computing, and writ- ing computation data in a pipelined manner, returning the point-wise multiplication module in an idle state.\n\nit\n\n[0094] The PWM algorithm is designed as shown Algorithm 6. The vector length k is configurable: when is used to accelerate the point-wise multiplication of\n\nin k=1, two\n\nUS 2024/0143524 Al\n\nMay 2, 2024\n\n10\n\npolynomials. When k is greater than 1, it is used to compute the point-wise multiplication of the polynomial column vector and the polynomial. In this example, the transmitted polynomial a is reused to multiply with all the polynomials in vector b, thus reducing the transmission of polynomial a from k to only 1 time.\n\nted back to software. Next, the polynomials cn and cy, are transmitted and computed following the above process repeatedly until the end of the computation. This method is flexible for parameterized design but required a 3(1-1)xn coefficients transmission overhead.\n\nAlgorithm 6 Vectorized Point-wise Multiplication\n\nInput: Polynomial a with coefficient array a[m] Input: Polynomial vector b with coefficient array b[k][n] Output: polynomial vector r = b+ a 1: for i= 0; i < ky i++ // Vectorized read counter design in hardware. The k is configurable using Software. 2: for j= 0;) <a je+ The n is fixed to 256 in hardware. \u00a5/ Single polynomial read counter design in hardware. 3: xD] = afi] \u00ab bli] mod q #/ Parallel multiplication unit design in hardware (two modular multipliers). 4: end for 5: end for 6: Return r with coefficient array r[k][n]", "type": "Document"}}