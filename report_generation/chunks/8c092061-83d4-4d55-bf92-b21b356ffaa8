{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "/home/guanzhideng145/research/ip_portal/patent_kg/patents/740-US20210134366(Pending) (Done on website already).pdf"}, "page_content": "DETAILED DESCRIPTION\n\n[0032] The inventors have, through their own research, trials and experiments, devised that content-addressable memory (CAM) is a special type of associative array that performs parallel searching of the stored rules. It may return the address of the matched rule in one clock cycle. CAMs may be generally classified into two major types: binary CAM (BiCAM) supports only two memory states (\u20180\u2019 and \u201c1\u2019) and ternary CAM (TCAM) supports three memory states (\u20180\u2019, \u20181\u2019, and *X\u2019), where the \u2018X\u2019 state may be considered as a \u201cdon\u2019t care bit\u201d or wildcard.\n\n[0041] On the other hand, the inventors devise that dis- tributed RAM-based TCAM architectures may \u201cwaste\u201d a large number of flip-flops (FFs) in FPGAs due to the LUT-FF pairs as it only needs LUTs to implement the memory device. This may be considered as inefficient uti- lization of memory resources. This problem may be solved by keeping in mind the hardware structure of FPGA slices and its other components which is explained later in this disclosure.\n\n[0033] Preferably, TCAM may be used in many applica- tions where the searching speed is imperative, such as digital signal processing, artificial intelligence, translation looka- side buffers (TLBs) in soft processors, cache memory, and gene pattern recognition in bioinformatics. Packet classifi- cation and packet forwarding may maintain the high throughput of the system using TCAM in networking appli- cations, e.g., software defined networks (SDNs).\n\n[0042] The third type of FPGA-based TCAMs is register- based TCAMs or gate-based TCAMs, which may use FFs store the TCAM rules and perform parallel comparisons each flip-flop with the input search key.", "type": "Document"}}