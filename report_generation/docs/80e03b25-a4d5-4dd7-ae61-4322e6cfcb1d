{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "/home/guanzhideng145/research/ip_portal/patent_kg/patents/740-US20210134366(Pending) (Done on website already).pdf"}, "page_content": "IN\n\nUS 20210134366A1\n\n( 19 ) United States\n\n( 12 ) Patent Application Publication ( 10 ) Pub . No .: US 2021/0134366 A1\n\nMay 6 , 2021\n\n( 43 ) Pub . Date :\n\nIrfan et al .\n\n( 52 ) U.S. CI .\n\n( 54 ) ELECTRONIC MEMORY DEVICE AND A\n\nGIIC 15/04 ( 2013.01 )\n\nMETHOD OF MANIPULATING THE\n\nCPC\n\nELECTRONIC MEMORY DEVICE\n\n( 57 )\n\nABSTRACT\n\n( 71 ) Applicant : City University of Hong Kong ,\n\nKowloon ( HK )\n\nAn electronic memory device and a method of manipulating\n\n( 72 ) Inventors : Muhammad Irfan , Kowloon ( HK ) ;\n\nthe electronic memory device . The electronic memory\n\nRay C. C. Cheung , Kowloon ( HK ) ;\n\ndevice includes a plurality of basic memory blocks con\n\nZahid Ullah , Kowloon ( HK )\n\nnected together with a modular structure , wherein each of\n\nthe basic memory blocks includes a plurality lookup tables\n\n( 21 ) Appl . No .: 16 / 671,669\n\n( LUT ) arranged to operate as an memory element for storing\n\na plurality of bits of logic levels ; and a plurality of registers\n\n( 22 ) Filed :\n\nNov. 1 , 2019\n\neach pairing up with a respective lookup table in the basic\n\nPublication Classification\n\nmemory blocks ; wherein the plurality of pairs of lookup\n\ntables and registers combine to form a pipelining memory\n\n( 51 ) Int . Ci .\n\nG11C 15/04\n\n( 2006.01 )\n\nstructure .\n\nTCAM\n\nRAM\n\n1\n\nX\n\nPort A\n\n0101\n\n0 X 1 X\n\nPort B\n\nPort A\n\nInput\n\nOutput\n\n1 1 0 X\n\nPort C\n\n1 0 x x\n\nPort D\n\n1\n\n00\n\nDec\n\nEnc\n\nsecretaria\n\n)\n\nUS 20210134366A1\n\nUnited States Patent Application Publication\n\ndo Pub. No.: US 2021/0134366 Al\n\n(43) Pub. Date: May 6, 2021\n\nIrfan et al.\n\n(52) U.S. CL Ps GUC 15/04 (2013.01)\n\n(54) ELECTRONIC MEMORY DEVICE AND METHOD OF MANIPULATING THE ELECTRONIC MEMORY DEVICE\n\n(57)\n\n(71) Applicant: City University of Hong Kong, Kowloon (HK)\n\nAn electronic memory device and a method of manipulating the electronic memory device. The electronic memory device includes a plurality of basic memory blocks con- nected together with a modular structure, wherein each of the basic memory blocks includes a plurality lookup tables (LUT) arranged to operate as an memory element for storing a plurality of bits of logic levels; and a plurality of registers each pairing Up with a respective lookup table in the basic memory blocks; wherein the plurality of pairs of lookup tables and registers combine to form a pipelining memory structure.\n\n(72) Inventors: Muhammad Irfan, Kowloon (HK); Ray C. C. Cheung, Kowloon (HK); Zahid Ullah, Kowloon (HK)\n\n, CD Appl. No.: 16/671,669\n\n(22) Filed: Nov. 1, 2019\n\nws \uff0c Publication Classification\n\n(51) Int. CL.\n\nas)\n\na2)\n\nA\n\nABSTRACT\n\nGUC 15/04\n\n(2006.01)\n\nPatent Application Publication\n\nMay 6 , 2021 Sheet 1 of 9\n\nUS 2021/0134366 A1\n\nOutput\n\nPort A\n\nocean\n\nRAM\n\nPort A Port B Port C Port D\n\nDec\n\n4 H\n\n????????\n\nFIG . 1\n\n????\n\nEnc\n\n0 1 0 X 010110 X 1 X\n\n1 1 0 X\n\n| | 1 o x x\n\nInput\n\nMay 6, 2021 Sheet 1 of 9\n\nUS 2021/0134366 Al\n\nPatent Application Publication\n\n<\n\n\u4e8c\n\nFIG. 1\n\nPatent Application Publication\n\nMay 6 , 2021 Sheet 2 of 9\n\nUS 2021/0134366 A1\n\n200\n\n202\n\n206\n\n208\n\n204\n\nACLE\n\nFIG . 2\n\nblock\n\nDSP\n\nBRAM\n\nUS 2021/0134366 Al\n\nMay 6, 2021 Sheet 2 of 9\n\nPatent Application Publication\n\n204 EA) ios \u4e8e FE \u4e2d \u51fa \u63da fed cus mae INS = 2 a\n\n200\n\n206\n\n202\n\n208\n\nFIG. 2\n\nPatent Application Publication\n\nMay 6 , 2021 Sheet 3 of 9\n\nUS 2021/0134366 A1\n\n0 0 102 11 0 0 00\n\n00 0 1\n\n2x3 RAM\n\nTCAM\n\n8x2\n\nFIG . 3C\n\n3\n\n1x3 RAM\n\nTCAM\n\n8x1\n\nFIG . 3B\n\n0\n\n0\n\n0 0\n\n0\n\n1\n\n1\n\n3 0 11\n\nT\n\n1x3 RAM\n\nTCAM\n\n0 1\n\n0 8x1\n\nFIG . 3A\n\n0\n\n0 0\n\n0\n\n0\n\n1 1\n\n3\n\nMay 6, 2021 Sheet 3 of 9\n\nPatent Application Publication\n\nUS 2021/0134366 Al\n\nFIG. 3C\n\nFIG. 3B\n\nFIG. 3A\n\nPatent Application Publication\n\nMay 6 , 2021 Sheet 4 of 9\n\nUS 2021/0134366 A1\n\nD\n\n2\n\n0 0 0 1 0 0 002 1 1 0\n\n1 1 0 0 0 0\n\nFIG . 3E\n\n8x4 2x6 RAM\n\nTCAM\n\n0 0 002 3\n\n10\n\n0 1\n\n1 1 0 0 0 0\n\n0\n\n0\n\nregular\n\n3\n\n1 1\n\n0 ola\n\n1 1\n\n30\n\n0\n\n0\n\n0\n\n0\n\n8x2 1x6 RAM\n\nTCAM\n\nFIG . 3D\n\n1\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n1\n\n1\n\n3\n\nUS 2021/0134366 Al\n\nPatent Application Publication\n\nMay 6, 2021 Sheet 4 of 9\n\n8x4 , 2x6 RAM TCAM RAM TCAM Bx2 1x6\n\nFIG. 3E\n\nFIG. 3D\n\nPatent Application Publication\n\nMay 6 , 2021 Sheet 5 of 9\n\nUS 2021/0134366 A1\n\n404\n\n400\n\nData_out\n\n| Add\n\n6\n\n1\n\n1\n\n64\n\nE\n\nP\n\nmaan\n\n64 MLS\n\nSRAM\n\nMemory ( 64 x 64 )\n\nFIG . 4A\n\nFIG . 4B\n\nSRAM\n\nMemory ( 64 x 64 )\n\nOne D - CAM\n\nblock\n\nmatchlinesi\n\n64 x 6 TCAM\n\nAddress 6\n\n64\n\nData in\n\nSK 61\n\n1\n\n1\n\nData\n\n64\n\n402\n\nMay 6, 2021 SheetSof9\n\nPatent Application Publication\n\nUS 2021/0134366 Al\n\n(79 X 79) j FPG Alowa lA AWS a NVOL 9 X 9 , 00p vt Old t9 \u300a\u4e00 \u4e00 \u5668 97og (v9 x 79) AsOW D3 IAI \u5185 YUS 9 ssauppy 32000700\n\nvor\n\ncov\n\nPatent Application Publication\n\nMay 6 , 2021 Sheet 6 of 9\n\nUS 2021/0134366 A1\n\nMLS\n\nTC\u00c1M ( 64X12 )\n\nI\n\nMLS\n\nSw\n\n12\n\n163 : 01\n\n64\n\n?\n\nFIG . 5A\n\n64\n\n64\n\n163 : 0 )\n\n( 63 : 0 )\n\nD - CAM block\n\nD - CAM block\n\nmehr\n\n( 11 : 6 )\n\n6\n\n[ 5 : 0\n\n12\n\n502\n\n502\n\n( 11 : 0 )\n\nSw -\n\n500\n\nMay 6, 2021 Sheet of 9\n\nUS 2021/0134366 Al\n\nPatent Application Publication\n\nVS \u2018Old\n\nPatent Application Publication\n\nMay 6 , 2021 Sheet 7 of 9\n\nUS 2021/0134366 A1\n\nMLS\n\n128\n\nTCAM ( 128x6 )\n\nMLS\n\n128\n\n( 127 : 0 )\n\n6\n\n}\n\nFIG . 5B\n\n..\n\n64\n\n( 63:01\n\nblock ( 127 : 64\n\nD - CAM block\n\nD - CAM\n\n6\n\n9\n\n+\n\nlo : s )\n\n( 5 : 0 )\n\n502\n\n502\n\n9 haglen as\n\n( o : s )\n\n500\n\nMay 6, 2021 Sheet 7 of 9\n\nUS 2021/0134366 Al\n\nPatent Application Publication\n\nas \u2018Old\n\nPatent Application Publication\n\nMay 6 , 2021 Sheet 8 of 9\n\nUS 2021/0134366 A1\n\nMLS\n\n128\n\n( 127 : 01\n\n( 127 : 64 )\n\n163 : 01\n\nD\n\nD\n\ntunningham ( 63:01\n\n( 127 : 641\n\n64\n\n163 : 01\n\nD - CAM | 127 : 04 )\n\nblock\n\nD - CAM block\n\nD - CAM block\n\nD - CAM block\n\n15:01\n\ngro 15:01\n\n6\n\n6\n\n6\n\n( 116 )\n\n( 11 : 6\n\nFIG.6\n\n602\n\nSw maghan ( 11:01\n\n602\n\n602\n\n602\n\n128\n\nTCAM\n\n( 128x12 ) Mis\n\n600\n\n\n\nMay 6, 2021 Sheet 8 of 9\n\nUS 2021/0134366 Al\n\nPatent Application Publication\n\nC09\n\nPatent Application Publication\n\nMay 6 , 2021 Sheet 9 of 9\n\nUS 2021/0134366 A1\n\nMLS\n\n708\n\n702\n\nAND ing\n\nStage 2 Registers\n\nPipeline\n\nFFS\n\nLUT - FF pair\n\nFIG . 7\n\nDCAM\n\nblocks )\n\nStage 1\n\n704\n\nD - TCAM ( Cascaded / Parallel\n\n706\n\nSK\n\n700\n\nMay 6, 2021 Sheet 90f9\n\nUS 2021/0134366 Al\n\nPatent Application Publication\n\nb0/ z0/ 904 802 Hed 44-11 \u4e86 \u5165 LFisypolq NWNV2q 19lEJed7/pa9p9SE \u5f15\n\nL\u00b0Old\n\nMay 6 , 2021\n\nUS 2021/0134366 A1\n\n1\n\n[ 0013 ]\n\nIn an embodiment of the first aspect , the memory\n\nELECTRONIC MEMORY DEVICE AND A\n\nelement has a distributed random - access memory ( RAM )\n\nMETHOD OF MANIPULATING THE\n\nELECTRONIC MEMORY DEVICE\n\nstructure .\n\n[ 0014 ]\n\nIn an embodiment of the first aspect , the distributed\n\nTECHNICAL FIELD\n\nRAM structure comprises a plurality of LUTRAM each\n\nincludes the plurality of LUTs in each of the slices in the\n\n[ 0001 ] The present invention relates to an electronic\n\nFPGA device .\n\nmemory device and a method for manipulating the elec\n\ntronic memory device , and particularly , although not exclu\n\n[ 0015 ]\n\nIn an embodiment of the first aspect , each of the\n\nsively , to an efficient ternary content - addressable memory .\n\nplurality of LUTRAM is a column memory of N cells and\n\nmay operate as an N - bit RAM .\n\nBACKGROUND\n\n[ 0016 ]\n\nIn an embodiment of the first aspect , the plurality\n\nof basic memory blocks combine to form a ternary content\n\n[ 0002 ]\n\nElectronic data may be stored in electronic memory\n\naddressable memory ( TCAM ) structure with a configuration\n\ndevices . In some applications which require a relatively\n\nof DxW , wherein D and W represent respectively the depth\n\nhigh - speed throughput of the memory device , temporary\n\nand the width of the TCAM structure .\n\nmemory devices such as random access memory ( RAM )\n\nmay be used , in which the speed of the read / write operation\n\n[ 0017 ]\n\nIn an embodiment of the first aspect , the plurality\n\nis extremely fast to facilitate the process of the data or signal\n\nof basic memory blocks includes multiple blocks connected\n\nof the entire system using the memory device .\n\nin a parallel form to increase the width of the TCAM\n\n[ 0003 ]\n\nIn RAM devices , logic bits of \u201c 1 \u201d and \u201c O \u201d may be\n\nstructure .\n\nstored in semiconductor in form of charges or capacitance\n\n[ 0018 ]\n\nIn an embodiment of the first aspect , the plurality\n\nwhich may be \u201c read \u201d by detecting the high / low voltage level\n\nof basic memory blocks includes multiple blocks connected\n\nof each bit represented by each of the RAM unit in the\n\nin a cascade form to increase the depth of the TCAM\n\ndevice . In general , a RAM device comprises multiple\n\nstructure .\n\nmemory storage units so to store multiple bits of data .\n\n[ 0019 ]\n\nIn accordance with a second aspect of the present\n\ninvention , there is provided a method of manipulating an\n\nSUMMARY OF THE INVENTION\n\nelectronic memory device in accordance with the first\n\naspect , comprising the steps of : configuring the FPGA\n\n[ 0004 ]\n\nIn accordance with a first aspect of the present\n\ndevice including assigning the LUTs in each of the slices to\n\ninvention , there is provided an electronic memory device\n\noperate as the memory element ; and assigning the flip - flops\n\ncomprising : a plurality of basic memory blocks connected\n\nin each of the slices to pair up with the LUTs and operate as\n\ntogether with a modular structure , wherein each of the basic\n\na plurality of pipeline registers in the memory structure .\n\nmemory blocks includes a plurality lookup tables ( LUT )\n\narranged to operate as a memory element for storing a\n\n[ 0020 ]\n\nIn accordance with a third aspect of the present\n\nplurality of bits of logic levels ; and a plurality of registers\n\ninvention , there is provided a method of manipulating an\n\neach pairing up with a respective lookup table in the basic\n\nelectronic memory device in accordance with the first\n\nmemory blocks ; wherein the plurality of pairs of lookup\n\naspect , comprising the step of mapping data from a TCAM\n\ntables and registers combine to form a pipelining memory\n\ntable into the electronic memory device including the plu\n\nrality of basic memory blocks .\n\nstructure .\n\n[ 0005 ]\n\nIn an embodiment of the first aspect , the plurality\n\n[ 0021 ]\n\nIn an embodiment of the third aspect , the method\n\nof lookup tables and the plurality of registers are provided in\n\nfurther comprises the steps of : partitioning the TCAM table\n\na plurality of configurable logic blocks .\n\ninto a plurality of sub - tables ; and mapping the plurality of\n\n[ 0006 ]\n\nIn an embodiment of the first aspect , the plurality\n\nsub - tables into corresponding basic memory blocks of the\n\nof configurable logic blocks are provided in a field program\n\nelectronic memory device .\n\nmable gate array ( FPGA ) device .\n\n[ 0022 ]\n\nIn an embodiment of the third aspect , the plurality\n\n[ 0007 ]\n\nIn an embodiment of the first aspect , the plurality\n\nof sub - tables includes mxn sub - tables , wherein m equals to\n\nof pairs of lookup tables and registers define a plurality of\n\na number of sub - tables in a column and n equals to a number\n\nslices in the FPGA device .\n\nof sub - tables in a row , and wherein mxn equals to the\n\n[ 0008 ]\n\nIn an embodiment of the first aspect , the plurality\n\nnumber of basic memory blocks in the electronic memory\n\nof registers includes a plurality of flip - flops .\n\ndevice .\n\n[ 0009 ]\n\nIn an embodiment of the first aspect , the plurality\n\n[ 0023 ]\n\nIn accordance with a fourth aspect of the present\n\nof flip - flops are connected between two stages of the pipe\n\ninvention , there is provided a method of manipulating an\n\nlining memory structure .\n\nelectronic memory device in accordance with the first\n\n[ 0010 ]\n\nIn an embodiment of the first aspect , the two stages\n\naspect , comprising the step of : providing an input search key\n\nincluding a first stage of the plurality of basic memory\n\nto an input of the electronic memory device ; dividing the\n\nblocks and a second stage of an AND operation logic gate .\n\ninput search key into a plurality of sub - words , wherein each\n\n[ 0011 ]\n\nIn an embodiment of the first aspect , the memory\n\nof the sub - words are provided as address input of each of the\n\ndevice further comprises a priority encoder arranged to\n\nplurality of basic memory blocks ; generating a plurality of\n\nconvert an output from the second stage to an address of data\n\nmatchline vectors ; converting the matchlines associated\n\nstored in the electronic memory device .\n\nwith the plurality of matchline vectors to a potential match\n\naddress representing location of data stored in the electronic\n\n[ 0012 ]\n\nIn an embodiment of the first aspect , the address is\n\na matching address obtained in response to a searching\n\nmemory device matching with the input search key ; and\n\noperation .\n\noutputting the potential match address .\n\nUS 2021/0134366 Al\n\nMay 6, 2021\n\nELECTRONIC MEMORY DEVICE AND A METHOD OF MANIPULATING THE ELECTRONIC MEMORY DEVICE\n\n[0013] In an embodiment of the first aspect, the memory element has a distributed random-access memory (RAM) structure.\n\n[0014] Inan embodiment of the first aspect, the distributed RAM structure comprises a plurality of LUTRAM each includes the plurality of LUTs in each of the slices in FPGA device.\n\nTECHNICAL FIELD\n\n[0001] The present invention relates to an electronic memory device and a method for manipulating the elec- tronic memory device, and particularly, although not exclu- sively, to an efficient ternary content-addressable memory.\n\n[0015] In an embodiment of the first aspect, each of the plurality of LUTRAM is a column memory of N cells and. may operate as an N-bit RAM.\n\nBACKGROUND\n\n[0016] In an embodiment of the first aspect, the plurality basic memory blocks combine to form a ternary content- addressable memory (TCAM) structure with a configuration DxW, wherein D and W represent respectively the depth and the width of the TCAM structure.\n\n[0002] Electronic data may be stored in electronic memory devices. In some applications which require a relatively high-speed throughput of the memory device, temporary memory devices such as random access memory (RAM) may be used, in which the speed of the read/write operation is extremely fast to facilitate the process of the data or signal of the entire system using the memory device.\n\n[0017] In an embodiment of the first aspect, the plurality basic memory blocks includes multiple blocks connected in a parallel form to increase the width of the TCAM structure.\n\nstored in semiconductor in form of charges or capacitance which may be \u201cread\u201d by detecting the high/low voltage level of each bit represented by each of the RAM unit in the device. In general, a RAM device comprises multiple units so to store multiple bits of data.\n\n[0018] In an embodiment of the first aspect, the plurality basic memory blocks includes multiple blocks connected. a cascade form to increase the depth of the TCAM structure.\n\n[0019] In accordance with a second aspect of the present invention, there is provided a method of manipulating an electronic memory device in accordance with the first aspect, comprising the steps of: configuring the FPGA device including assigning the LUTs in each of the slices to operate as the memory element; and assigning the flip-flops each of the slices to pair up with the LUTs and operate as plurality of pipeline registers in the memory structure.\n\nSUMMARY OF THE INVENTION\n\n[0004] In accordance with a first aspect of the present invention, there is provided an electronic memory device comprising: a plurality of basic memory blocks connected together with a modular structure, wherein each of the basic memory blocks includes a plurality lookup tables (LUT) arranged to operate as a memory element for storing a plurality of bits of logic levels; and a plurality of registers each pairing up with a respective lookup table in the basic memory blocks; wherein the plurality of pairs of lookup tables and registers combine to form a pipelining memory structure.\n\n[0020] In accordance with a third aspect of the present invention, there is provided a method of manipulating an electronic memory device in accordance with the first aspect, comprising the step of mapping data from a TCAM table into the electronic memory device including the plu- tality of basic memory blocks.\n\n[0005] In an embodiment of the first aspect, the plurality lookup tables and the plurality of registers are provided plurality of configurable logic blocks.\n\n[0021] In an embodiment of the third aspect, the method further comprises the steps of: partitioning the TCAM table into a plurality of sub-tables; and mapping the plurality sub-tables into corresponding basic memory blocks of the electronic device.\n\n[0006] In an embodiment of the first aspect, the plurality configurable logic blocks are provided in a field program- mable gate array (FPGA) device.\n\n[0022] In an embodiment of the third aspect, the plurality of sub-tables includes mxn sub-tables, wherein m equals to a number of sub-tables in a column and n equals to a number of sub-tables in a row, and wherein mxn equals to the number of basic memory blocks in the electronic memory device.\n\n[0007] In an embodiment of the first aspect, the plurality of pairs of lookup tables and registers define a plurality of slices in the FPGA device.\n\n[0008] In an embodiment of the first aspect, the plurality registers includes a plurality of flip-flops.\n\n[0009] In an embodiment of the first aspect, the plurality of flip-flops are connected between two stages of the pipe- lining memory structure.\n\n[0023] In accordance with a fourth aspect of the present invention, there is provided a method of manipulating an electronic memory device in accordance with the first aspect, comprising the step of: providing an input search key to an input of the electronic memory device; dividing the input search key into a plurality of sub-words, wherein each of the sub-words are provided as address input of each of the plurality of basic memory blocks; generating a plurality of matchline vectors; converting the matchlines associated with the plurality of matchline vectors to a potential match address representing location of data stored in the electronic memory device matching with the input search key; and outputting the potential match address.\n\n[0010] In an embodiment of the first aspect, the two stages including a first stage of the plurality of basic memory blocks and a second stage of an AND operation logic gate.\n\n[0011] In an embodiment of the first aspect, the memory device further comprises a priority encoder arranged to convert an output from the second stage to an address of data stored in the electronic memory device.\n\n[0012] In an embodiment of the first aspect, the address is matching address obtained in response to a searching operation.\n\n[0003]\n\nIn RAM devices, logic bits of \u201c1\u201d and \u201c0\u201d may be\n\nmemory storage\n\nof\n\nin\n\na\n\nof\n\nof\n\na\n\nthe\n\nof\n\nof\n\nof\n\nof\n\nin\n\nin\n\na\n\nof\n\nmemory\n\nMay 6 , 2021\n\nUS 2021/0134366 A1\n\n2\n\ntems . The inventors devise that , although TCAM is vital\n\nBRIEF DESCRIPTION OF THE DRAWINGS\n\nelement in networking applications , modem FPGAs may\n\n[ 0024 ] Embodiments of the present invention will now be\n\nlack a hard core for TCAM because of its many other\n\ndescribed , by way of example , with reference to the accom\n\napplications where TCAM would not be used . It was sup\n\npanying drawings in which :\n\nported by some old FPGAs in the form of partial memory\n\n[ 0025 ] FIG . 1 is a block diagram showing an RAM /\n\nblocks and multi - function blocks ( MFBs ) , but TCAM is not\n\nTCAM implementation of a routing table ;\n\nincluded in other example FPGAs . In one example embodi\n\n[ 0026 ] FIG . 2 is an illustration of an example FPGA\n\nment , a TCAM may be needed for the implementation of\n\ndevice , which may be programmed to operate as an elec\n\nnetworking system inside an FPGA .\n\ntronic memory device in accordance with an embodiment of\n\n[ 0037 ] Emulated TCAMs may be an alternative to utilize\n\nthe present invention ;\n\nthe hardware resources of FPGA to design a TCAM inside\n\n[ 0027 ] FIGS . 3A to 3E are illustrations of conversion of\n\nFPGAs . These FPGA may also provide soft cores for TCAM\n\nLUTRAMs into TCAMs based on different emulating rules ;\n\nto support its applications , but the memory utilization may\n\n[ 0028 ] FIGS . 4A and 4B are block diagrams showing a\n\nbe inefficient in some examples . Some emulated TCAMS\n\nbuilding block of D - TCAM ;\n\nmay support the SDNs however lack efficient usage of\n\n[ 0029 ] FIGS . 5A and 5B are illustrations showing expan\n\nmemory resources on FPGA .\n\nsions of D - TCAM using two D - CAM blocks connected in\n\n[ 0038 ] For example , some FPGAs may not have a hard IP\n\nparallel form or in cascade form ;\n\nto support TCAM . Alternatively , emulated TCAMs may be\n\n[ 0030 ] FIG . 6 is an illustration showing horizontal and\n\nused by utilizing the memory resources inside FPGAs , these\n\nvertical expansion of a D - TCAM using four D - CAM blocks ;\n\nemulated TCAMs may be considered as FPGA - based\n\n[ 0031 ] FIG . 7 is a schematic diagram showing LUT - FF\n\nCAMs .\n\npairs and the pipeline memory structure of the memory\n\n[ 0039 ]\n\nIn some alternatively examples , TCAMs may be\n\ndevice in accordance with an embodiment of the present\n\nimplemented based on application - specific integrated cir\n\ninvention .\n\ncuits ( ASICs ) , however ASICs may be less preferable in\n\nsome applications as these devices may have low storage\n\nDETAILED DESCRIPTION\n\ndensity , less reconfigurable , and challenging to integrate\n\nwith FPGA - based systems .\n\n[ 0032 ] The inventors have , through their own research ,\n\n[ 0040 ]\n\nIn one example embodiment , there is provided a\n\ntrials and experiments , devised that content - addressable\n\nnovel TCAM architecture\n\nusing\n\ndistributed - RAM\n\nmemory ( CAM ) is a special type of associative array that\n\n( D - TCAM ) which outperforms exemplary FPGA - based\n\nperforms parallel searching of the stored rules . It may return\n\nTCAMs by efficiently utilizing the hardware resources .\n\nthe address of the matched rule in one clock cycle . CAMS\n\nPreferably , the physical structure of FPGA slices may be\n\nmay be generally classified into two major types : binary\n\nutilized to improve the throughput of TCAM by introducing\n\nCAM ( BICAM ) supports only two memory states ( \u201c O ' and\n\npipeline registers to the design .\n\n\u201c 1 ' ) and ternary CAM ( TCAM ) supports three memory\n\n[ 0041 ] On the other hand , the inventors devise that dis\n\nstates ( O ' ,\n\n' l ' , and ' X ' ) , where the X'state may be\n\ntributed RAM - based TCAM architectures may \u201c waste \u201d a\n\nconsidered as a \u201c don't care bit \u201d or wildcard .\n\nlarge number of flip - flops ( FFs ) in FPGAs due to the\n\n[ 0033 ]\n\nPreferably , TCAM may be used in many applica\n\nLUT - FF pairs as it only needs LUTs to implement the\n\ntions where the searching speed is imperative , such as digital\n\nmemory device . This may be considered as inefficient uti\n\nsignal processing , artificial intelligence , translation looka\n\nlization of memory resources . This problem may be solved\n\nside buffers ( TLBs ) in soft processors , cache memory , and\n\nby keeping in mind the hardware structure of FPGA slices\n\ngene pattern recognition in bioinformatics . Packet classifi\n\nand its other components which is explained later in this\n\ncation and packet forwarding may maintain the high\n\nthroughput of the system using TCAM in networking appli\n\ndisclosure .\n\n[ 0042 ] The third type of FPGA - based TCAMs is register\n\ncations , e.g. , software defined networks ( SDNs ) .\n\nbased TCAMs or gate - based TCAMs , which may use FFs to\n\n[ 0034 ] Without wishing to be bound by theory , TCAM\n\nstore the TCAM rules and perform parallel comparisons of\n\nmay be an essential element in modern networking appli\n\neach flip - flop with the input search key .\n\ncations where it provides the functionality of packet classi\n\nfication and packet forwarding in the form of implementing\n\n[ 0043 ]\n\nIn this example , FFs in FPGA terminology are\n\na routing table . FPGAs , having considerable amount of\n\nknown as slice registers ( SRs ) . Gate - based TCAMs reduces\n\nmemory and logical resources , are extremely favorable for\n\nthe hardware resources in terms of slices per TCAM bit but\n\nmay lack scalability because of its high routing complexity .\n\ncomplex reconfigurable systems , e.g. , software defined net\n\nLH - CAM and G - AETCAM may be two examples imple\n\nworks ( SDNs ) . The presence of TCAM in FPGAs may be\n\npreferable for implementing such complex systems .\n\nmented as 64x36 BiCAM and TCAM , respectively , on\n\nXilinx FPGA . It may be preferable in terms of hardware\n\n[ 0035 ] With reference to FIG . 1 , a routing table may be\n\nresources and speed for small size TCAM , but for larger\n\nmaintained in the TCAM which stores the destination\n\nsizes , it may not be a good option to emulate TCAM on\n\naddresses and the ports to which the data packet needs to be\n\nforwarded . The router compares the destination address ( e.g.\n\nFPGA .\n\n\u201c 0 1 0 1 \u201d ) of the incoming packet with the stored addresses\n\n[ 0044 ]\n\nIn one example embodiment , there is provided an\n\nelectronic memory device comprising : a plurality of basic\n\nand chooses the appropriate port ( Port A ) . The matchline of\n\nTCAM may act as a pointer to the corresponding word ( Port\n\nmemory blocks connected together with a modular structure ,\n\nwherein each of the basic memory blocks includes a plu\n\nnumber ) in static random - access memory ( SRAM ) .\n\nrality lookup tables ( LUT ) arranged to operate as an memory\n\n[ 0036 ]\n\nField - programmable gate arrays ( FPGAs ) provide\n\na large amount of logic and memory components which\n\nelement for storing a plurality of bits of logic levels ; and a\n\nplurality of registers each pairing up with a respective\n\nmakes them suitable for the application of emerging sys\n\nUS 2021/0134366 Al\n\nMay 6, 2021\n\ntems. The inventors devise that, although TCAM is vital element in networking applications, modem FPGAs may lack a hard core for TCAM because of its many other applications where TCAM would not be used. It was sup- ported by some old FPGAs in the form of partial memory blocks and multi-function blocks (MFBs), but TCAM is not included in other example FPGAs. In one example embodi- ment, a TCAM may be needed for the implementation of networking system inside an FPGA.\n\nBRIEF DESCRIPTION OF THE DRAWINGS\n\n[0024] Embodiments of the present invention will now described, by way of example, with reference to the accom- panying drawings in which:\n\n[0025] FIG. 1 is a block diagram showing an RAM/ TCAM implementation of a routing table;\n\n[0026] FIG. 2 is an illustration of an example FPGA device, which may be programmed to operate as an elec- tronic memory device in accordance with an embodiment of the present invention;\n\n[0037] Emulated TCAMs may be an alternative to utilize the hardware resources of FPGA to design a TCAM inside FPGAs. These FPGA may also provide soft cores for TCAM to support its applications, but the memory utilization may be inefficient in some examples. Some emulated TCAMs may support the SDNs however lack efficient usage of memory resources on FPGA,\n\n[0027] FIGS. 3A to 3E are illustrations of conversion of LUTRAMs into TCAMs based on different emulating rules;\n\n[0028] FIGS. 4A and 4B are block diagrams showing building block of D-TCAM;\n\n[0029] FIGS. 5A and 5B are illustrations showing expan- sions of D-TCAM using two D-CAM blocks connected in parallel form or in cascade form;\n\n[0038] For example, some FPGAs may not have a hard IP support TCAM. Alternatively, emulated TCAMs may be used by utilizing the memory resources inside FPGAs, these emulated TCAMs may be considered as FPGA-based. CAMs.\n\n[0030] FIG. 6 is an illustration showing horizontal and vertical expansion of a D-TCAM using four D-CAM blocks;\n\n[0031] FIG. 7 is a schematic diagram showing LUT-FF pairs and the pipeline memory structure of the memory device in accordance with an embodiment of the present invention.\n\n[0039] In some alternatively examples, TCAMs may be implemented based on application-specific integrated cir- cuits (ASICs), however ASICs may be less preferable in some applications as these devices may have low storage density, less reconfigurable, and challenging to integrate with FPGA-based systems.\n\nDETAILED DESCRIPTION\n\n[0032] The inventors have, through their own research, trials and experiments, devised that content-addressable memory (CAM) is a special type of associative array that performs parallel searching of the stored rules. It may return the address of the matched rule in one clock cycle. CAMs may be generally classified into two major types: binary CAM (BiCAM) supports only two memory states (\u20180\u2019 and \u201c1\u2019) and ternary CAM (TCAM) supports three memory states (\u20180\u2019, \u20181\u2019, and *X\u2019), where the \u2018X\u2019 state may be considered as a \u201cdon\u2019t care bit\u201d or wildcard.\n\n[0041] On the other hand, the inventors devise that dis- tributed RAM-based TCAM architectures may \u201cwaste\u201d a large number of flip-flops (FFs) in FPGAs due to the LUT-FF pairs as it only needs LUTs to implement the memory device. This may be considered as inefficient uti- lization of memory resources. This problem may be solved by keeping in mind the hardware structure of FPGA slices and its other components which is explained later in this disclosure.\n\n[0033] Preferably, TCAM may be used in many applica- tions where the searching speed is imperative, such as digital signal processing, artificial intelligence, translation looka- side buffers (TLBs) in soft processors, cache memory, and gene pattern recognition in bioinformatics. Packet classifi- cation and packet forwarding may maintain the high throughput of the system using TCAM in networking appli- cations, e.g., software defined networks (SDNs).\n\n[0042] The third type of FPGA-based TCAMs is register- based TCAMs or gate-based TCAMs, which may use FFs store the TCAM rules and perform parallel comparisons each flip-flop with the input search key.\n\n[0034] Without wishing to be bound by theory, TCAM may be an essential element in modern networking appli- cations where it provides the functionality of packet classi- fication and packet forwarding in the form of implementing a routing table. FPGAs, having considerable amount of memory and logical resources, are extremely favorable for complex reconfigurable systems, e.g., software defined net- works (SDNs). The presence of TCAM in FPGAs may be preferable for implementing such complex systems.\n\n[0043] In this example, FFs in FPGA terminology are known as slice registers (SRs). Gate-based TCAMs reduces the hardware resources in terms of slices per TCAM bit but may lack scalability because of its high routing complexity. LH-CAM and G-AETCAM may be two examples imple- mented as 64x36 BiCAM and TCAM, respectively, on Xilinx FPGA. It may be preferable in terms of hardware resources and speed for small size TCAM, but for larger sizes, it may not be a good option to emulate TCAM on FPGA.\n\n[0035] With reference to FIG. 1, a routing table may be maintained in the TCAM which stores the destination addresses and the ports to which the data packet needs to be forwarded. The router compares the destination address (e.g. \u201c0 1 0 1\u201d) of the incoming packet with the stored addresses and chooses the appropriate port (Port A). The matchline of TCAM may act as a pointer to the corresponding word (Port number) in static random-access memory (SRAM).\n\n[0044] In one example embodiment, there is provided an electronic memory device comprising: a plurality of basic memory blocks connected together with a modular structure, wherein each of the basic memory blocks includes a plu- rality lookup tables (LUT) arranged to operate as an memory element for storing a plurality of bits of logic levels; and a plurality of registers each pairing up with a respective\n\n[0036] Field-programmable gate arrays (FPGAs) provide large amount of logic and memory components which makes them suitable for the application of emerging\n\nbe\n\na\n\na\n\nsys-\n\nto\n\n[0040] In one example embodiment, there is provided a novel TCAM architecture using distributed-RAM (D-TCAM) which outperforms exemplary FPGA-based TCAMs by efficiently utilizing the hardware Preferably, the physical structure of FPGA slices may be utilized to improve the throughput of TCAM by introducing pipeline registers to the design.\n\nresources.\n\nto of\n\nMay 6 , 2021\n\nUS 2021/0134366 A1\n\n3\n\naddress corresponds to the rule present in TCAM , otherwise\n\nlookup table in the basic memory blocks ; wherein the\n\nplurality of pairs of lookup tables and registers combine to\n\n\u2018 logic - 0 \u2019 is stored . For instance , 3 - input LUTRAM TCAM\n\nform a pipelining memory structure .\n\nrules .\n\n[ 0052 ]\n\nSimilarly , referring to FIGS . 3C and 3D , two\n\n[ 0045 ]\n\nIn this embodiment , the memory device is imple\n\n3 - input LUTRAMs may be connected in parallel , e.g. with\n\nmented in a field programmable gate array ( FPGA ) device\n\noutputs being \u201c ANDed \u201d ( by connecting the outputs to an\n\nwhich contains multiple programmable components called\n\nadditional AND logic ) to form 1x6 TCAM . With reference\n\nconfigurable logic blocks ( CLB ) . Once the CLBs are pro\n\nto FIG . 3D , the LUTRAMs stores \u201c 1 0 X 0 1 0 \u201d as one\n\ngrammed , the FPGA may logically process electronic inputs\n\nand provide corresponding logic output as required . For\n\n6 - input rule . The input search key ( Sk ) equal to \u201c 1 0 0 0 1\n\nexample , the FPGA may utilize the programmed lookup\n\n0 \u201d and \u201c 1 000 1 0 \u201d matches with the stored rule to provide\n\nmatchline ( ML ) equal to ' logic - l ' as output .\n\ntables in the device to process the input to determine the\n\noutput , and provides the output logic as desired .\n\n[ 0053 ] Four 3 - input LUTRAMs are connected such that\n\ntwo LUTRAMs in parallel and two in cascade form to\n\n[ 0046 ] The following table lists the important terminolo\n\nemulate a 2x6 TCAM . In FIG . 3E two TCAM rules of 6 bits\n\ngies used in the memory device according to embodiments\n\neach ( \u201c 1 0 0 X 10 \u201d and \u201c 1 X X 0 0 1 \u201d ) are stored .\n\nof the present invention .\n\n[ 0054 ] To simplify the understanding , the emulation of\n\nLUTRAMs into TCAM may be explained using 3 - input\n\nTABLE 1\n\nLUTRAMs . FPGAs may have 6 - input LUTRAM , such as in\n\nthose Xilinx FPGAs . In this example TCAM design , 6 - input\n\nTerminologies ( Notations for D - TCAM )\n\nmay saves information of 1x6 TCAM in a similar way as\n\nNotation\n\nefir ion\n\ndescribed for 3 - input LUTRAM of FIG . 3A . For example , a\n\nbasic memory block including a D - CAM block may include\n\nSearch key ( W bits )\n\nSk\n\n64 6 - input LUTRAMs which implements a 64x6 TCAM . In\n\nWidth of the D - TCAM\n\nW\n\nDepth of the D - TCAM\n\naddition , multiple basic memory blocks , i.e. , the D - CAM\n\nD\n\nNumber of D - CAM blocks in a column\n\nm\n\nblocks , may be connected together to form a modular\n\nNumber of D - CAM blocks in a row\n\nn\n\nstructure of larger TCAMs similarly as described for mul\n\nMatch lines . Output of D - TCAM going into\n\nMLs\n\ntiple 3 - input LUTRAMs in cascade and / or parallel form ,\n\nthe priority encoder\n\nMatch line vecotrs of 64 bits . Ouptput of\n\nML_Vs\n\nreferring to FIG . 3E for example .\n\neach D - CAM block\n\n[ 0055 ]\n\nPreferably , the D - CAM block is the basic building\n\nSub - word formed by dividing Sk into a 6 - bit\n\nSw\n\nblock of the D - TCAM architecture . In one preferable\n\nwords\n\nembodiment , one D - CAM block consists of 64 6 - input\n\nlookup tables ( LUTs ) . These LUTs may be provided by the\n\n[ 0047 ] FPGAs consist of reconfigurable hardware compo\n\nSLICEM slices of Xilinx FPGAs , which are also known as\n\nnents , to implement any digital system , supported by the\n\nLUTRAMs .\n\ninterconnection matrix . With reference to FIG . 2 , an exem\n\n[ 0056 ] With reference to FIG . 4A , there is shown a\n\nplary FPGA 200 may include block RAMS ( BRAMS ) 202 ,\n\nD - CAM block 402 which is a distributed memory of 64x64\n\ndigital signal processing ( DSP ) blocks 204 , configurable\n\nconsisting of 64 LUTRAMs . All of the memory locations\n\nlogic blocks ( CLBs ) 206 , and input / output blocks ( IOBs )\n\ncan be read and write using the \u201c Address \u201d and \u201c Data_in \" as\n\n208 .\n\ninputs , and \u201c Data_out \u201d as the output of the basic memory\n\n[ 0048 ]\n\nPreferably , the lookup tables and the registers may\n\nblock ( D - CAM ) 402. The same memory as shown in FIG .\n\nbe provided in a plurality of configurable logic blocks 206\n\n4A may be used in FIG . 4B with a priority encoder 404 , and\n\nin the FPGA 200 , and the pairs of lookup tables and registers\n\nis changed into a TCAM memory 400 .\n\nmay further define a plurality of slices in the FPGA device\n\n[ 0057 ]\n\nIn this example , the address in FIG . 4A represents\n\n200 .\n\nthe search key ( Sk ) of TCAM memory 404 in FIG . 4B .\n\n[ 0049 ] For example , in some FPGA architectures , CLB\n\nData_out in FIG . 4A represents the matchlines ( MLS ) of\n\n206 may consist of two types of slices ; SLICEM and\n\nTCAM memory 400 in FIG . 4B . Preferably , a priority\n\nSLICEL . Each slice may include four lookup tables ( LUTS )\n\nencoder 404 may be used to translate matchlines into an\n\nand eight flip - flops ( also known as SRs ) . LUTs inside a\n\naddress where the input search key is found .\n\nSLICEL can be configured as a logic element which imple\n\n[ 0058 ]\n\nPreferably , the plurality of basic memory blocks\n\nments any function up to 6 - inputs ( using one LUT ) , and may\n\nmay combine to form a ternary content - addressable memory\n\noperate as function generators . LUTs inside a SLICEM can\n\n( TCAM ) structure with a configuration of DxW , wherein D\n\nbe configured as a logic element as well as a memory\n\nand W represent respectively the depth and the width of the\n\nelement , and may be used as LUTRAMs .\n\nTCAM structure . For example , each basic D - CAM block\n\n[ 0050 ]\n\nPreferably , each LUTRAM may be a column\n\nimplements 48 bytes of TCAM with configuration as 64x6 ,\n\nmemory of N cells which can be used as N - bit RAM .\n\nwhere 64 is the depth ( D ) of TCAM and 6 is the width ( W )\n\nMultiple LUTRAMs combine to form a distributed RAM\n\nof TCAM . As discussed earlier , the size of the TCAM may\n\nstructure in a memory element . In one example , N = 64 and\n\nbe expanded or scaled , in which the basic memory blocks\n\ntherefore the LUTRAM may be a 64 - bit RAM . Alterna\n\nmay include multiple blocks connected in a parallel form to\n\ntively , N may be of other value in different memory struc\n\nincrease the width of the TCAM structure , or in a cascade\n\nform to increase the depth of the TCAM structure .\n\ntures .\n\n[ 0059 ] With reference to FIG . 5A , increasing the width of\n\n[ 0051 ] With reference to FIGS . 3A and 3B , a 3 - input\n\nTCAM from 6 bits to 12 bits requires an additional D - CAM\n\nLUTRAM saves the information of 1x3 TCAM . The address\n\nblock by keeping the depth of TCAM constant . Alterna\n\ninput of the LUTRAM may be treated as search key ( Sk ) of\n\ntively , referring to FIG . 5B , increasing the depth of TCAM\n\n1x3 TCAM . Only those location ( s ) stores ' logic - 1 ' whose\n\nUS 2021/0134366 Al\n\nMay 6, 2021\n\naddress corresponds to the rule present in TCAM, otherwise \u2018logic-0\u2019 is stored. For instance, 3-input LUTRAM TCAM rules.\n\nmemory plurality of pairs of lookup tables and registers combine to form a pipelining memory structure.\n\n[0052] Similarly, referring to FIGS. 3C and 3D, two 3-input LUTRAMs may be connected in parallel, e.g. with outputs being \u201cANDed\u201d (by connecting the outputs to an additional AND logic) to form 1x6 TCAM. With reference to FIG. 3D, the LUTRAMs stores \u201c1 0 X 0 1 0\u201d as one 6-input rule. The input search key (Sk) equal to \u201c10001 0\u201d and \u201c1 000 1 0\u201d matches with the stored rule to provide matchline (ML) equal to \u2018logic-1\u2019 as output.\n\n[0045] In this embodiment, the memory device is imple- mented in a field programmable gate array (FPGA) device which contains multiple programmable components called configurable logic blocks (CLB). Once the CLBs are pro- grammed, the FPGA may logically process electronic inputs and provide corresponding logic output as required. For example, the FPGA may utilize the programmed lookup tables in the device to process the input to determine the output, and provides the output logic as desired.\n\n[0053] Four 3-input LUTRAMs are connected such that two LUTRAMs in parallel and two in cascade form emulate a 2x6 TCAM. In FIG. 3E two TCAM rules of 6 bits each (\u201c1 00 X 1 0\u201d and \u201c1 X X 00 1\u201d) are stored.\n\n[0046] The following table lists the important terminolo- used in the memory device according to embodiments the present invention.\n\n[0054] \u2018To simplify the understanding, the emulation of LUTRAMs into TCAM may be explained using 3-input LUTRAMs. FPGAs may have 6-input LUTRAM, such as in those Xilinx FPGAs. In this example TCAM design, 6-input may saves information of 1x6 TCAM in a similar way as described for 3-input LUTRAM of FIG. 3A. For example, a basic memory block including a D-CAM block may include 64 6-input LUTRAMs which implements a 64x6 TCAM. In addition, multiple basic memory blocks, i.e., the D-CAM blocks, may be connected together to form a modular structure of larger TCAMs similarly as described for mul- tiple 3-input LUTRAMs in cascade and/or parallel form, referring to FIG. 3E for example.\n\nTABLE 1\n\nTerminologies (Notations for D-TCAM) Notation Definition Sk Search key (W bits) Ww Width of the D-TCAM D Depth of the D-TCAM m Number of D-CAM blocks in a column n Number of D-CAM blocks in a row MLs Match lines. Output of D-TCAM going into the priority encoder ML_vs Match line vecotrs of 64 bits, Ouptput of each D-CAM block Sw Sub-word formed by dividing Sk into a 6-bit words\n\nblock of the D-TCAM architecture. In one preferable embodiment, one D-CAM block consists of 64 6-input lookup tables (LUTs). These LUTs may be provided by the SLICEM slices of Xilinx FPGAs, which are also known as LUTRAMs.\n\n[0047] FPGAs consist of reconfigurable hardware compo- nents, to implement any digital system, supported by the interconnection matrix. With reference to FIG. 2, an exem- plary FPGA 200 may include block RAMs (BRAMs) 202, digital signal processing (DSP) blocks 204, configurable logic blocks (CLBs) 206, and input/output blocks (IOBs) 208.\n\n[0056] With reference to FIG. 4A, there is shown a D-CAM block 402 which is a distributed memory of 64x64 consisting of 64 LUTRAMs. All of the memory locations can be read and write using the \u201cAddress\u201d and \u201cData_in\u201d as inputs, and \u201cData_out\u201d as the output of the basic memory block (D-CAM) 402. The same memory as shown in FIG. 4A may be used in FIG. 4B with a priority encoder 404, and is changed into a TCAM memory 400.\n\n[0048] Preferably, the lookup tables and the registers may be provided in a plurality of configurable logic blocks 206 in the FPGA 200, and the pairs of lookup tables and registers may further define a plurality of slices in the FPGA device 200.\n\n[0057] In this example, the address in FIG. 4A represents the search key (Sk) of TCAM memory 404 in FIG. 4B. Data_out in FIG. 4A represents the matchlines (MLs) of TCAM memory 400 in FIG. 4B. Preferably, a priority encoder 404 may be used to translate matchlines into an address where the input search key is found.\n\n[0049] For example, in some FPGA architectures, CLB 206 may consist of two types of slices; SLICEM and SLICEL. Each slice may include four lookup tables (LUTs) and eight flip-flops (also known as SRs). LUTs inside a SLICEL can be configured as a logic element which imple- ments any function up to 6-inputs (using one LUT), and may operate as function generators. LUTs inside a SLICEM can be configured as a logic element as well as a memory element, and may be used as LUTRAMs.\n\n[0058] Preferably, the plurality of basic memory blocks may combine to form a ternary content-addressable memory (TCAM) structure with a configuration of DxW, wherein D and W represent respectively the depth and the width of the TCAM structure. For example, each basic D-CAM block implements 48 bytes of TCAM with configuration as 64x6, where 64 is the depth (D) of TCAM and 6 is the width (W) of TCAM. As discussed earlier, the size of the TCAM may be expanded or scaled, in which the basic memory blocks may include multiple blocks connected in a parallel form to increase the width of the TCAM structure, or in a cascade form to increase the depth of the TCAM structure.\n\n[0050] Preferably, each LUTRAM may be a column memory of N cells which can be used as N-bit RAM. Multiple LUTRAMs combine to form a distributed RAM structure in a memory element. In one example, N=64 and therefore the LUTRAM may be a 64-bit RAM. Alterna- tively, N may be of other value in different memory struc- tures.\n\n[0059] With reference to FIG. 5A, increasing the width TCAM from 6 bits to 12 bits requires an additional D-CAM block by keeping the depth of TCAM constant. Alterna- tively, referring to FIG. 5B, increasing the depth of TCAM\n\n[0051] With reference to FIGS. 3A and 3B, a 3-input LUTRAM saves the information of 1x3 TCAM. The address input of the LUTRAM may be treated as search key (Sk) of 1x3 TCAM. Only those location(s) stores \u2018logic-1\u2019 whose\n\nlookup table\n\nin\n\nthe\n\nbasic\n\nblocks;\n\nwherein\n\nthe\n\ngies of\n\nto\n\n[0055]\n\nPreferably, the D-CAM block is the basic building\n\nof\n\nMay 6 , 2021\n\nUS 2021/0134366 A1\n\n4\n\nstructure . These registers are the flip - flops assigned to oper\n\nfrom 64 to 128 requires an additional D - CAM block by\n\nate as pipeline registers 702. In the pipelining memory\n\nkeeping the width of TCAM constant . In these two\n\nexamples , horizontal expansion of D - CAM blocks 502 is\n\nstructure , flip - flops 702 are connected between two stages ,\n\nincluding a first stage of the plurality of basic memory\n\ndone to increase the width while the vertical expansion of\n\nblocks 706 and a second stage of an AND operation logic\n\nD - CAM blocks is done to increase the depth of emulated\n\ngate 708 .\n\nD - TCAM 500 .\n\n[ 0068 ] Advantageously , pipelining in the digital system\n\n[ 0060 ]\n\nIn another example , with reference to FIG . 6 ,\n\nmay improve the performance of the whole system , and\n\nexpansion in both directions may be performed to create the\n\nthroughput is improved in most of the cases . In the preferred\n\ndesired size configuration of TCAM on FPGAs . For\n\nTCAM design , the pipeline memory structure may be\n\nexample , a formation of 128x12 TCAM 600 may be\n\ndivided into two pipeline stages , separated from each other\n\nobtained using four D - CAM blocks 602 connected in both\n\nusing pipeline registers . Referring to FIG . 7 , the redundant\n\nparallel and cascade form . Similarly , by further expanding\n\nFFs of each LUT - FF pair are used as pipeline registers .\n\nthe TCAM structure , a D - TCAM of size 512x144 may be\n\nemulated using 192 D - CAM blocks connected in parallel\n\n[ 0069 ]\n\nIn addition , the memory device saves the informa\n\ntion about the presence of input search key as well as the\n\nand cascade form .\n\n[ 0061 ] As discussed above , FPGA's hardware compo\n\naddress where it is found in LUTRAMs in an efficient way\n\nto reduce the number of SRAM cells per TCAM bit com\n\nnents may be utilized in the form of slices ( or CLBs ) ,\n\nBRAMS , DSP blocks , and I / O blocks to synthesize any\n\npared to other LUTRAM - based TCAMs . Similarly , the\n\ndigital design . Preferably , LUTs and FFs may be arranged as\n\nredundant FFs are used as pipeline registers to divide the\n\nTCAM design into two stages which improved the through\n\nLUT - FF pair inside the slices . They may not be used\n\nindependently . For example , if a digital design requires 200\n\nput .\n\nLUTs but not any FF , the synthesizer will still assign 50\n\n[ 0070 ] Furthermore , in embodiments of the present inven\n\nslices to it , which contains FFs as well . In this example , the\n\ntion , the number of slices utilized by the TCAM structure ,\n\n200 FFs are utilized ( synthesized / inferred ) by the digital\n\neither without pipelining or with pipelining , is basically\n\ndesign but are not used , which is a wastage of area in FPGA .\n\nsame , but the performance may be improved in the latter\n\n[ 0062 ]\n\nIn some example TCAM structures which are\n\ncase , i.e. with pipelining .\n\nbased on distributed RAM using LUTRAMs , these struc\n\n[ 0071 ]\n\nIn one example embodiment , the electronic\n\ntures may only need LUTs from the LUT - FF pairs inside a\n\nmemory device may be further manipulated , by mapping\n\nslice . A large number of LUT - FF pairs are inferred by the\n\ndata from a TCAM table into the electronic memory device\n\nsynthesizer in the form of slices to implement the distributed\n\nincluding the plurality of basic memory blocks . Such map\n\nRAM - based TCAM designs . LUTs are needed by these\n\nping includes : partitioning the TCAM table into a plurality\n\ndesign , but FFs are not .\n\nof sub - tables ; and mapping the plurality of sub - tables into\n\n[ 0063 ] However , due to the LUT - FF pair nature of FPGA ,\n\ncorresponding basic memory blocks of the electronic\n\nFFs are also inferred by the synthesizer while they are not\n\nmemory device .\n\npart of the design . It is a waste of area on the reconfigurable\n\n[ 0072 ]\n\nPreferably , data from a TCAM table may be\n\ndevice , i.e. , FPGA . These FFs may be considered as redun\n\nmapped into D - TCAM which consists of D - CAM blocks .\n\ndant flip - flops .\n\nMapping of TCAM data into the emulated TCAM may be\n\n[ 0064 ]\n\nIn one example embodiment , there is provided a\n\nreferred as \" populating \" . In this populating operation , the\n\nmethod for manipulating an electronic memory device such\n\nplurality of sub - tables includes mxn sub - tables , wherein m\n\nas an FGPA or an FPGA - based memory device . The method\n\nequals to a number of sub - tables in a column and n equals\n\ncomprises the steps of : configuring the FPGA device includ\n\nto a number of sub - tables in a row , and wherein mxn equals\n\ning assigning the LUTs in each of the slices to operate as the\n\nto the number of basic memory blocks in the electronic\n\nmemory element ; and assigning the flip - flops in each of the\n\nmemory device .\n\nslices to pair up with the LUTs and operate as a plurality of\n\n[ 0073 ] For example , the TCAM table may be partitioned\n\npipeline registers in the memory structure .\n\ninto m rows and n columns of sub - tables according to the\n\n[ 0065 ]\n\nIn this embodiment , the flip - flops in the slices are\n\ndimensions of D - CAM block , i.e. , 64x6 . Each row of the\n\nassigned for pipelining . Advantageously , the memory device\n\npartitioned TCAM table consists of 64 rules while each\n\nmay be programmed according to the available hardware in\n\ncolumn consists of 6 bits . The mxn sub - tables of TCAM\n\nmay be mapped into the corresponding D - CAM blocks to\n\nFPGA to efficiently utilize the area and hardware resources ,\n\nand redundantly inferred FFs of the LUT - FF pairs for\n\nform a D - TCAM of size DxW , where D is the depth of\n\npipelining\n\nTCAM and W is the width of TCAM . In the example\n\npopulation operation as shown below , variable \u2018 t \u2019 represents\n\n[ 0066 ] By exploiting the LUT - FF pair nature of the hard\n\nthe corresponding sub - table of TCAM mapping to D - CAM\n\nresources inside FPGAs , the available hardware\n\nware\n\nresources may be efficiently utilized . Preferably , these\n\nblocks of D - TCAM . Preferably , a total of mxnx64\n\nredundant flip - flops may be assigned as pipeline registers\n\nLUTRAMs are required to implement DxW D - TCAM\n\nwhich combine with the LUT in the slices to form a\n\nbecause each D - CAM block constitutes of 64 LUTRAMs .\n\npipelining memory structure , and improved the throughput\n\n[ 0074 ]\n\nOperation 1 Populating Operation ( DxW TCAM )\n\nof the TCAM design .\n\n[ 0067 ] With reference to FIG . 7 , the electronic memory\n\ndevice 700 comprises a plurality of registers 702 each\n\nInput : TCAM Table ( D x W )\n\nOutput : D - TCAM Table ( m x n sub - tables )\n\npairing up with respective lookup table 704 in the basic\n\n1 :\n\nfor t < - 0 to t mx n do\n\nmemory blocks 706 , the plurality of pairs of lookup tables\n\n2 :\n\nfor i < - 0 to i < - m do\n\n704 in the D - TCAM memory blocks 706 as discussed earlier\n\nfor j < - 0 to j < - n do\n\n3 :\n\nand registers 702 combine to form a pipelining memory\n\nUS 2021/0134366 Al\n\nMay 6, 2021\n\nfrom 64 to 128 requires an additional D-CAM block by keeping the width of TCAM constant. In these two examples, horizontal expansion of D-CAM blocks 502 is done to increase the width while the vertical expansion of D-CAM blocks is done to increase the depth of emulated D-TCAM 500.\n\nstructure. These registers are the flip-flops assigned to oper- ate as pipeline registers 702. In the pipelining memory structure, flip-flops 702 are connected between two stages, including a first stage of the plurality of basic memory blocks 706 and a second stage of an AND operation logic gate 708.\n\n[0068] Advantageously, pipelining in the digital system may improve the performance of the whole system, and throughput is improved in most of the cases. In the preferred. TCAM design, the pipeline memory structure may be divided into two pipeline stages, separated from each other using pipeline registers. Referring to FIG. 7, the redundant FFs of each LUT-FF pair are used as pipeline registers.\n\n[0060] In another example, with reference to FIG. 6, expansion in both directions may be performed to create the desired size configuration of TCAM on FPGAs. For example, a formation of 128x12 TCAM 600 may be obtained using four D-CAM blocks 602 connected in both parallel and cascade form. Similarly, by further expanding the TCAM structure, a D-TCAM of size 512x144 may be emulated using 192 D-CAM blocks connected in parallel and cascade form.\n\n[0069] In addition, the memory device saves the informa- tion about the presence of input search key as well as the address where it is found in LUTRAMs in an efficient way to reduce the number of SRAM cells per TCAM bit com- pared to other LUTRAM-based TCAMs. Similarly, the redundant FFs are used as pipeline registers to divide the TCAM design into two stages which improved the through- put.\n\n[0061] As discussed above, FPGA\u2019s hardware compo- nents may be utilized in the form of slices (or CLBs), BRAMs, DSP blocks, and I/O blocks to synthesize any digital design. Preferably, LUTs and FFs may be arranged as LUT-FF pair inside the slices. They may not be used independently. For example, if a digital design requires 200 LUTs but not any FF, the synthesizer will still assign 50 slices to it, which contains FFs as well. In this example, the 200 FFs are utilized (synthesized/inferred) by the digital design but are not used, which is a wastage of area in FPGA.\n\n[0070] Furthermore, in embodiments of the present inven- tion, the number of slices utilized by the TCAM structure, either without pipelining or with pipelining, is basically same, but the performance may be improved in the latter case, i.e. with pipelining.\n\n[0062] In some example TCAM structures which are based on distributed RAM using LUTRAMs, these struc- tures may only need LUTs from the LUT-FF pairs inside a slice. A large number of LUT-FF pairs are inferred by the synthesizer in the form of slices to implement the distributed RAM-based TCAM designs. LUTs are needed by these design, but FFs are not.\n\n[0071] In one example embodiment, the electronic memory device may be further manipulated, by mapping data from a TCAM table into the electronic memory device including the plurality of basic memory blocks. Such map- ping includes: partitioning the TCAM table into a plurality of sub-tables; and mapping the plurality of sub-tables into corresponding basic memory blocks of the electronic memory device.\n\n[0063] However, due to the LUT-FF pair nature of FPGA, FFs are also inferred by the synthesizer while they are not part of the design. It is a waste of area on the reconfigurable device, i.e., FPGA. These FFs may be considered as redun- dant flip-flops.\n\n[0072] Preferably, data from a TCAM table may be mapped into D-TCAM which consists of D-CAM blocks. Mapping of TCAM data into the emulated TCAM may be referred as \u201cpopulating\u201d. In this populating operation, the plurality of sub-tables includes mxn sub-tables, wherein m equals to a number of sub-tables in a column and n equals to a number of sub-tables in a row, and wherein mxn equals to the number of basic memory blocks in the electronic memory device.\n\n[0064] In one example embodiment, there is provided a method for manipulating an electronic memory device such as an FGPA or an FPGA-based memory device. The method comprises the steps of: configuring the FPGA device includ- ing assigning the LUTs in each of the slices to operate as the memory element; and assigning the flip-flops in each of the slices to pair up with the LUTs and operate as a plurality of pipeline registers in the memory structure.\n\nmay into m rows and n columns of sub-tables according to the dimensions of D-CAM block, i.e., 64x6. Each row of the partitioned TCAM table consists of 64 rules while each column consists of 6 bits. The mxn sub-tables of TCAM may be mapped into the corresponding D-CAM blocks to form a D-TCAM of size DxW, where D is the depth of TCAM and W is the width of TCAM. In the example population operation as shown below, variable \u2018t\u2019 represents the corresponding sub-table of TCAM mapping to D-CAM blocks of D-TCAM. Preferably, a total of mxnx64 LUTRAMs are required to implement DxW D-TCAM because each D-CAM block constitutes of 64 LUTRAMs.\n\n[0065] In this embodiment, the flip-flops in the slices are assigned for pipelining. Advantageously, the memory device may be programmed according to the available hardware in FPGA to efficiently utilize the area and hardware resources, and redundantly inferred FFs of the LUT-FF pairs for pipelining.\n\n[0066] By exploiting the LUT-FF pair nature of the hard- ware resources inside FPGAs, the available hardware resources may be efficiently utilized. Preferably, these redundant flip-flops may be assigned as pipeline registers which combine with the LUT in the slices to form a pipelining memory structure, and improved the throughput of the TCAM design.\n\n[0074] Operation 1 Populating Operation (DxW TCAM)\n\n[0067] With reference to FIG. 7, the electronic memory device 700 comprises a plurality of registers 702 each pairing up with a respective lookup table 704 in the basic memory blocks 706, the plurality of pairs of lookup tables 704 in the D-TCAM memory blocks 706 as discussed earlier and registers 702 combine to form a pipelining memory\n\nInput: TCAM Table (D x W)\n\n1: fort<-Ototmxndo\n\n2: for i<- 0 to i<-mdo\n\n[0073]\n\nFor example, the TCAM table\n\nbe partitioned\n\nOutput: D-TCAM Table (m x\n\nn sub-tables)\n\n3:\n\nfor j\n\n<- 0 toj <-ndo\n\nMay 6 , 2021\n\nUS 2021/0134366 A1\n\n5\n\n[ 0081 ] A large number of TCAM dimensions were imple\n\ncontinued\n\nmented by varying the depth ( D ) and width ( W ) of the\n\nemulated TCAM which proves the scalability and modular\n\nD - CAM [ i ] [ j ] < = TCAM sub - table [ t ]\n\n4 :\n\nend for\n\n5 :\n\nstructure of the TCAM architecture .\n\n6 :\n\nend for\n\n[ 0082 ] Advantageously , speed of all emulated designs of\n\n7 : end for\n\nD - TCAM is greater than the speed of the design without\n\nmx n : Total number of sub - tables in TCAM which is\n\npipeline registers . The memory device of the present inven\n\nequal to the number of D - CAM blocks in D - TCAM\n\nm : Number of sub - tables in a column\n\ntion shows improvement in speed of TCAM without using\n\nn : Number of sub - tables in a row\n\nadditional hardware resources on FPGAs .\n\n[ 0083 ]\n\nIt will be appreciated by persons skilled in the art\n\n[ 0075 ]\n\nIn this operation , the update latency of RAM - based\n\nthat numerous variations and / or modifications may be made\n\nTCAMs may be proportional to the depth of the utilized\n\nto the invention as shown in the specific embodiments\n\nRAM blocks . Comparing BRAM - based TCAMs have a\n\nwithout departing from the spirit or scope of the invention as\n\n513 - clock cycle update latency , distributed - RAM based\n\nbroadly described . The present embodiments are , therefore ,\n\nTCAMs in accordance with embodiments of the present\n\nto be considered in all respects as illustrative and not\n\ninvention have an update latency of only 65 clock cycles .\n\nrestrictive .\n\n[ 0076 ] Yet in other example embodiment , there is pro\n\n[ 0084 ] Any reference to prior art contained herein is not to\n\nvided a method of manipulating an electronic memory\n\nbe taken as an admission that the information is common\n\ndevice , in particular a searching operation performed by the\n\ngeneral knowledge , unless otherwise indicated .\n\nmemory device . The method comprises the step of : provid\n\n1. An electronic memory device comprising :\n\ning an input search key to an input of the electronic memory\n\na plurality of basic memory blocks connected together\n\ndevice ; dividing the input search key into a plurality of\n\nwith a modular structure , wherein each of the basic\n\nsub - words , wherein each of the sub - words are provided as\n\nmemory blocks includes a plurality lookup tables\n\naddress input of each of the plurality of basic memory\n\n( LUT ) arranged to operate as an memory element for\n\nblocks ; generating a plurality of matchline vectors ; convert\n\nstoring a plurality of bits of logic levels ; and\n\na plurality of registers each pairing up with a respective\n\ning the matchlines associated with the plurality of matchline\n\nvectors to a potential match address representing location of\n\nlookup table in the basic memory blocks ;\n\ndata stored in the electronic memory device matching with\n\nwherein the plurality of pairs of lookup tables and registers\n\nthe input search key ; and outputting the potential match\n\ncombine to form a pipelining memory structure .\n\naddress .\n\n2. The electronic memory device in accordance with\n\n[ 0077 ] The searching operation is illustrated as follows :\n\nclaim 1 , wherein the plurality of lookup tables and the\n\n[ 0078 ]\n\nOperation 2 Searching of D - TCAM for Potential\n\nplurality of registers are provided in a plurality of config\n\nMatch\n\nurable logic blocks .\n\n3. The electronic memory device in accordance with\n\nclaim 2 , wherein the plurality of configurable logic blocks\n\nInput : Search key ( Sk )\n\nare provided in a field programmable gate array ( FPGA )\n\nOutput : m Matchline vectors ( ML_Vs ) of 64 bits each\n\ndevice .\n\nwhich is converted to potential match address by PE .\n\n4. The electronic memory device in accordance with\n\n1 : for i < - 0 to i < - n do\n\nsub - word [ i ] < = Sk [ 6 * n : ( 6 * n ) + 5 ] ;\n\nclaim 3 , wherein the plurality of pairs of lookup tables and\n\n2 : end for\n\nregisters define a plurality of slices in the FPGA device .\n\n3 : for j <- < - 0 to j < - m do\n\n5. The electronic memory device in accordance with\n\nML_V [ i ] < = D - CAM [ j ] [ subword ( 0 ) ) AND\n\nclaim 4 , wherein the plurality of registers includes a plurality\n\nD - CAM [ ] [ subword ( 1 ) ] AND\n\nof flip - flops .\n\n6. The electronic memory device in accordance with\n\nclaim 5 , wherein the plurality of flip - flops are connected\n\nD - CAM [ ] [ subword ( n ) ] ;\n\nbetween two stages of the pipelining memory structure .\n\n4 : end for\n\n5 : PE < = ML_V [ m : 0 ]\n\n7. The electronic memory device in accordance with\n\nm : Number of sub - tables in a column\n\nclaim 6 , wherein the two stages including a first stage of the\n\nn : Number of sub - tables in a row\n\nplurality of basic memory blocks and a second stage of an\n\nPE : A priority encoder which converts the\n\nmatchline vectors into the potential match address\n\nAND operation logic gate .\n\n8. The electronic memory device in accordance with\n\nclaim 7 , further comprising a priority encoder arranged to\n\n[ 0079 ]\n\nIn this operation , the input search key ( Sk ) is\n\nconvert an output from the second stage to an address of data\n\ndivided into n 6 - bit sub - words ( Sw ) and are provided to its\n\ncorresponding n D - CAM blocks . Sw is searched in m\n\nstored in the electronic memory device .\n\n9. The electronic memory device in accordance with\n\nD - CAM blocks in parallel to generate 64 - bit matchline\n\nclaim 8 , wherein the address is a matching address obtained\n\nvectors ( ML_Vs ) . The m ML_Vs from each of the n D - CAM\n\nin response to a searching operation .\n\nblocks are ANDed to form m * 64 matchlines ( MLS ) which\n\n10. The electronic memory device in accordance with\n\nare converted to an address by the priority encoder ( PE ) .\n\n[ 0080 ] The inventors also evaluated the performance of\n\nclaim 4 , wherein the memory element has a distributed\n\nrandom - access memory ( RAM ) structure .\n\nthe memory device in accordance with embodiments of the\n\npresent invention . In the experiment , the D - TCAM was\n\n11. The electronic memory device in accordance with\n\nclaim 9 , wherein the distributed RAM structure comprises a\n\nimplemented on Xilinx Virtex - 6 FPGA for the size 512x144 .\n\nIn the experiment , the FPGA device XC6VLX760 is used\n\nplurality of LUTRAM each includes the plurality of LUTs in\n\nwith -2 speed grade .\n\neach of the slices in the FPGA device .\n\nMay 6, 2021\n\nUS 2021/0134366 Al\n\n[0081] A large number of TCAM dimensions were imple- mented by varying the depth (D) and width (W) of the emulated TCAM which proves the scalability and modular structure of the TCAM architecture.\n\n-continued\n\n4 D-CAM[I] [i] <= TCAM sub-table[t] 5: end for 6: end for 7: end for m x n; Total number of sub-tables in TCAM which is equal to the number of D-CAM blocks in D-TCAM m: Number of sub-tables in a column n: Number of sub-tables in a row\n\n[0082] Advantageously, speed designs D-TCAM is greater than the speed of the design without pipeline registers. The memory device of the present inven- tion shows improvement in speed of TCAM without using additional hardware resources on FPGAs.\n\n[0083] It will be appreciated by persons skilled in the art that numerous variations and/or modifications may be made to the invention as shown in the specific embodiments without departing from the spirit or scope of the invention as broadly described. The present embodiments are, therefore, to be considered in all respects as illustrative and not restrictive.\n\n[0075] In this operation, the update latency of RAM-based TCAMs may be proportional to the depth of the utilized RAM blocks. Comparing BRAM-based TCAMs have a 513-clock cycle update latency, distributed-RAM based TCAMs in accordance with embodiments of the present invention have an update latency of only 65 clock cycles.\n\n[0076] Yet in other example embodiment, there is pro- vided a method of manipulating an electronic memory device, in particular a searching operation performed by the memory device. The method comprises the step of: provid- ing an input search key to an input of the electronic memory device; dividing the input search key into a plurality of sub-words, wherein each of the sub-words are provided as address input of each of the plurality of basic memory blocks; generating a plurality of matchline vectors; convert- ing the matchlines associated with the plurality of matchline vectors to a potential match address representing location of data stored in the electronic memory device matching with the input search key; and outputting the potential match address.\n\n[0084] Any reference to prior art contained herein is not taken as an admission that the information is common general knowledge, unless otherwise indicated.\n\n1. An electronic memory device comprising:\n\nmemory with a modular structure, wherein each of the basic memory blocks includes a plurality lookup tables (LUT) arranged to operate as an memory element for storing a plurality of bits of logic levels; and\n\na plurality of registers each pairing up with a respective lookup table in the basic memory blocks;\n\nwherein the plurality of pairs of lookup tables and registers combine to form a pipelining memory structure.\n\n2. The electronic memory device in accordance claim 1, wherein the plurality of lookup tables and plurality of registers are provided in a plurality of config- urable logic blocks.\n\n[0077] The searching operation is illustrated as follows: [0078] Operation 2 Searching of D-TCAM for Potential Match\n\n3. The electronic memory device in accordance claim 2, wherein the plurality of configurable logic blocks are provided in a field programmable gate array (FPGA)\n\nInput: Search key (Sk) Output: m Matchline vectors (ML_Vs) of 64 bits each which is converted to potential match address by PE. 1: for i<- 0 toi<-ndo sub-word [i] <= Sk [6*n:(6*n)+5]; 2: end for 3: for j <- 0 toj <- mdo ML V [j] <= D-CAM [j] [subword (0) ] AND. D-CAM [j] [subword (1) ] AND D-CAM [j] [subword (n) ] ; 4: end for 5: PE <= ML_V [m:0] m: Number of sub-tables in a column n; Number of sub-tables in a row PE: A priority encoder which converts the matchline vectors into the potential match address\n\n4. The electronic memory device in accordance with claim 3, wherein the plurality of pairs of lookup tables and registers define a plurality of slices in the FPGA device.\n\n5. The electronic memory device in accordance with claim 4, wherein the plurality of registers includes a plurality flip-flops.\n\n6. The electronic memory device in accordance with laim 5, wherein the plurality of flip-flops are connected etween two stages of the pipelining memory structure.\n\n7. The electronic memory device in accordance claim 6, wherein the two stages including a first stage of plurality of basic memory blocks and a second stage of AND operation logic gate.\n\n8. The electronic memory device in accordance with claim 7, further comprising a priority encoder arranged convert an output from the second stage to an address of data stored in the electronic device.\n\n[0079] In this operation, the input search key (Sk) is divided into n 6-bit sub-words (Sw) and are provided to its corresponding n D-CAM blocks. Sw is searched in m D-CAM blocks in parallel to generate 64-bit matchline vectors (ML_Vs). The m ML_Vs from each of the n D-CAM blocks are ANDed to form m*64 matchlines (MLs) which are converted to an address by the priority encoder (PE).\n\n9. The electronic memory device in accordance claim 8, wherein the address is a matching address obtained. response to a searching operation.\n\n10. The electronic memory device in accordance with claim 4, wherein the memory element has a distributed random-access memory (RAM) structure.\n\n[0080] The inventors also evaluated the performance of the memory device in accordance with embodiments of the present invention. In the experiment, the D-TCAM was implemented on Xilinx Virtex-6 FPGA for the size 512x144. In the experiment, the FPGA device XC6VLX760 is used with -2 speed grade.\n\n11. The electronic memory device in accordance with claim 9, wherein the distributed RAM structure comprises lurality of LUTRAM each includes the plurality of LUTs each of the slices in the FPGA device.\n\nof all emulated\n\nof\n\nto\n\nbe\n\na plurality of basic\n\nblocks connected together\n\nwith the\n\nwith\n\nof\n\nwith the\n\nan\n\nto\n\nmemory\n\nwith\n\nin\n\na\n\nin\n\nso\n\n3\n\nMay 6 , 2021\n\nUS 2021/0134366 A1\n\n6\n\nthe method comprising the step of mapping data from a\n\n12. The electronic memory device in accordance with\n\nTCAM table into the electronic memory device includ\n\nclaim 10 , wherein each of the plurality of LUTRAM is a\n\ning the plurality of basic memory blocks .\n\ncolumn memory of N cells and may operate as an N - bit\n\nRAM .\n\n18. The method in accordance with claim 17 , further\n\ncomprising the steps of :\n\n13. The electronic memory device in accordance with\n\nclaim 1 , wherein the plurality of basic memory blocks\n\npartitioning the TCAM table into a plurality of sub - tables ;\n\ncombine to form a ternary content - addressable memory\n\nand\n\n( TCAM ) structure with a configuration of DxW , wherein D\n\nmapping the plurality of sub - tables into corresponding\n\nand W represent respectively the depth and the width of the\n\nbasic memory blocks of the electronic memory device .\n\nTCAM structure .\n\n19. The method in accordance with claim 18 , wherein the\n\n14. The electronic memory device in accordance with\n\nplurality of sub - tables includes mxn sub - tables , wherein m\n\nclaim 12 , wherein the plurality of basic memory blocks\n\nequals to a number of sub - tables in a column and n equals\n\nincludes multiple blocks connected in a parallel form to\n\nto a number of sub - tables in a row , and wherein mxn equals\n\nincrease the width of the TCAM structure .\n\nto the number of basic memory blocks in the electronic\n\n15. The electronic memory device in accordance with\n\nmemory device .\n\nclaim 12 , wherein the plurality of basic memory blocks\n\n20. A method of manipulating an electronic memory\n\nincludes multiple blocks connected in a cascade form to\n\ndevice including :\n\nincrease the depth of the TCAM structure .\n\na plurality of basic memory blocks connected together\n\n16. A method of manipulating an electronic memory\n\nwith a modular structure , wherein each of the basic\n\ndevice including :\n\nmemory blocks includes a plurality lookup tables\n\na plurality of basic memory blocks connected together\n\n( LUT ) arranged to operate as an memory element for\n\nwith a modular structure , wherein each of the basic\n\nstoring a plurality of bits of logic levels ; and\n\nmemory blocks includes a plurality lookup tables\n\na plurality of registers each pairing up with a respective\n\n( LUT ) arranged to operate as an memory element for\n\nlookup table in the basic memory blocks ,\n\nstoring a plurality of bits of logic levels ; and\n\nwherein the plurality of pairs of lookup tables and\n\na plurality of registers each pairing up with a respective\n\nregisters combine to form a pipelining memory\n\nlookup table in the basic memory blocks ,\n\nstructure ,\n\nwherein the plurality of pairs of lookup tables and\n\nwherein the plurality of lookup tables and the plurality\n\nregisters combine to form a pipelining memory\n\nof registers are provided in a plurality of configur\n\nstructure ,\n\nable logic blocks ,\n\nwherein the plurality of lookup tables and the plurality\n\nwherein the plurality of pairs of lookup tables and\n\nof registers are provided in a plurality of configur\n\nregisters define a plurality of slices in a field pro\n\nable logic blocks ,\n\ngrammable gate array ( FPGA ) device , and\n\nwherein the plurality of pairs of lookup tables and\n\nwherein the plurality of registers includes a plurality of\n\nregisters define a plurality of slices in a field pro\n\nflip - flops ,\n\ngrammable gate array ( FPGA ) device , and\n\nwherein the plurality of flip - flops are connected\n\nwherein the plurality of registers includes a plurality of\n\nbetween two stages of the pipelining memory struc\n\nflip - flops ,\n\nture , and\n\nthe method comprising the steps of :\n\nwherein the two stages including a first stage of the\n\nconfiguring the FPGA device including assigning the\n\nplurality of basic memory blocks and a second stage\n\nLUTs in each of the slices to operate as the memory\n\nof an AND operation logic gate , and\n\nelement ; and\n\nassigning the flip - flops in each of the slices to pair up\n\nwherein the electronic memory device further com\n\nwith the LUTs and operate as a plurality of pipeline\n\nprises a priority encoder arranged to convert an\n\nregisters in the memory structure .\n\noutput from the second stage to an address of data\n\n17. A method of manipulating an electronic memory\n\nstored in the electronic memory device ,\n\ndevice including :\n\nthe method comprising the step of :\n\na plurality of basic memory blocks connected together\n\nproviding an input search key to an input of the\n\nwith a modular structure , wherein each of the basic\n\nelectronic memory device ;\n\nmemory blocks includes a plurality lookup tables\n\ndividing the input search key into a plurality of sub\n\n( LUT ) arranged to operate as an memory element for\n\nwords , wherein each of the sub - words are provided\n\nstoring a plurality of bits of logic levels ; and\n\nas address input of each of the plurality of basic\n\na plurality of registers each pairing up with a respective\n\nmemory blocks ;\n\nlookup table in the basic memory blocks ,\n\ngenerating a plurality of matchline vectors ;\n\nwherein the plurality of pairs of lookup tables and\n\nconverting the matchlines associated with the plurality\n\nregisters combine to form a pipelining memory\n\nof matchline vectors to a potential match address\n\nstructure , and\n\nrepresenting location of data stored in the electronic\n\nwherein the plurality of basic memory blocks combine\n\nmemory device matching with the input search key ;\n\nto form a ternary content - addressable memory\n\nand\n\n( TCAM ) structure with a configuration of DxW ,\n\noutputting the potential match address .\n\nwherein D and W represent respectively the depth\n\nand the width of the TCAM structure ,\n\nUS 2021/0134366 Al\n\nMay 6, 2021\n\nthe method comprising the step of mapping data from a TCAM table into the electronic memory device includ- ing the plurality of basic memory blocks.\n\n12. The electronic memory device in accordance with claim 10, wherein each of the plurality of LUTRAM is column memory of N cells and may operate as an N-bit RAM.\n\n18. The method in accordance with claim 17, further comprising the steps of:\n\n13. The electronic memory device in accordance with claim 1, wherein the plurality of basic memory blocks combine to form a ternary content-addressable memory (TCAM) structure with a configuration of DxW, wherein D and W represent respectively the depth and the width of the TCAM structure.\n\npartitioning the TCAM table into a plurality of sub-tables; and\n\nmapping the plurality of sub-tables into corresponding basic memory blocks of the electronic memory device.\n\n19. The method in accordance with claim 18, wherein the plurality of sub-tables includes mxn sub-tables, wherein m equals to a number of sub-tables in a column and n equals to a number of sub-tables in a row, and wherein mxn equals to the number of basic memory blocks in the electronic memory device.\n\n14. The electronic memory device in accordance with claim 12, wherein the plurality of basic memory blocks includes multiple blocks connected in a parallel form to increase the width of the TCAM structure.\n\n15. The electronic memory device in accordance with claim 12, wherein the plurality of basic memory blocks includes multiple blocks connected in a cascade form to increase the depth of the TCAM structure.\n\n20. A method of manipulating an electronic memory device including:\n\na plurality memory together with a modular structure, wherein each of the basic memory blocks includes a plurality lookup tables (LUT) arranged to operate as an memory element for storing a plurality of bits of logic levels; and\n\n16. A method of manipulating an electronic memory device including:\n\na plurality of basic memory blocks connected together with a modular structure, wherein each of the basic memory blocks includes a plurality lookup tables (LUT) arranged to operate as an memory element for storing a plurality of bits of logic levels; and\n\nplurality of registers each pairing up with a respective lookup table in the basic memory blocks,\n\nwherein the plurality of pairs of lookup tables and registers combine to form a pipelining memory structure,\n\na plurality of registers each pairing up with a respective lookup table in the basic memory blocks,\n\nwherein the plurality of pairs of lookup tables and registers combine to form a pipelining memory structure,\n\nplurality lookup plurality of registers are provided in a plurality of configur- able logic blocks,\n\nwherein the plurality of lookup tables and the plurality of registers are provided in a plurality of configur- able logic blocks,\n\nwherein the plurality of pairs of lookup tables and registers define a plurality of slices in a field pro- grammable gate array (FPGA) device, and\n\nwherein the plurality of pairs of lookup tables and registers define a plurality of slices in a field pro- grammable gate array (FPGA) device, and\n\nwherein the plurality of registers includes a plurality of flip-flops,\n\nwherein the plurality of registers includes a plurality of flip-flops,\n\nplurality flip-flops are between two stages of the pipelining memory struc- ture, and\n\nthe method comprising the steps of:\n\nconfiguring the FPGA device including assigning the LUTs in each of the slices to operate as the memory element; and\n\ntwo stages including a stage plurality of basic memory blocks and a second stage of an AND operation logic gate, and\n\nassigning the flip-flops in each of the slices to pair up with the LUTs and operate as a plurality of pipeline registers in the memory structure.\n\nwherein the electronic memory device further com- prises a priority encoder arranged to convert an output from the second stage to an address of data stored in the electronic memory device,\n\n17. A method of manipulating an electronic memory device including:\n\nthe method comprising the step of:\n\nproviding an input search key to an input of the electronic memory device;\n\na plurality memory with a modular structure, wherein each of the basic memory blocks includes a plurality lookup tables (LUT) arranged to operate as an memory element for storing a plurality of bits of logic levels; and\n\ndividing the input search key into a plurality of words, wherein each of the sub-words are provided as address input of each of the plurality of basic memory blocks;\n\na plurality of registers each pairing up with a respective lookup table in the basic memory blocks,\n\ngenerating a plurality of matchline vectors;\n\nwherein the plurality of pairs of lookup tables and registers combine to form a pipelining memory structure, and\n\nconverting of matchline vectors to a potential match address representing location of data stored in the electronic memory device matching with the input search key; and\n\nplurality memory to form a ternary content-addressable memory (TCAM) structure with a configuration of DxW, wherein D and W represent respectively the depth and the width of the TCAM structure,\n\noutputting the potential match address.\n\nee Ok kk\n\na\n\nof basic\n\nblocks connected together\n\nwherein the\n\nof basic\n\nblocks combine\n\nof basic\n\nblocks connected\n\na\n\nwherein the\n\nof\n\ntables and the\n\nwherein\n\nthe\n\nof\n\nconnected\n\nwherein the\n\nfirst\n\nof the\n\nsub-\n\nthe matchlines associated with the plurality", "type": "Document"}}